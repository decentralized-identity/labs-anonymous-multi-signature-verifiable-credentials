{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/next%4015.5.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return type.displayName || \"Context\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, props, owner, debugStack, debugTask) {\n      var refProp = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== refProp ? refProp : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        maybeKey,\n        getOwner(),\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"next/dist/compiled/react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (type, config, maybeKey, isStaticChildren) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/next%4015.5.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA;;KAEO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/base64-js%401.5.1/node_modules/base64-js/index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/ieee754%401.2.1/node_modules/ieee754/index.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/buffer%406.0.3/node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/lib.esm/type-checks.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { Buffer } from 'buffer';\n\n/**\n * @module TypeChecks\n * This module provides utility functions to check data types.\n * It defines a set of supported types and includes functions to check if\n * a value is defined and if it matches a supported type. These functions\n * are useful for type checking and validation in the other libraries,\n * enhancing code robustness and reliability.\n */\n/** @internal */\nconst supportedTypes = [\n    \"number\",\n    \"string\",\n    \"function\",\n    \"Array\",\n    \"Uint8Array\",\n    \"Buffer\",\n    \"object\",\n    \"bigint\",\n    \"stringified-bigint\",\n    \"hexadecimal\",\n    \"bignumber\",\n    \"bignumberish\"\n];\n/**\n * Returns true if the value is defined, false otherwise.\n * @param value The value to be checked.\n */\nfunction isDefined(value) {\n    return typeof value !== \"undefined\";\n}\n/**\n * Returns true if the value is a number, false otherwise.\n * @param value The value to be checked.\n */\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\n/**\n * Returns true if the value is a string, false otherwise.\n * @param value The value to be checked.\n */\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n/**\n * Returns true if the value is a function, false otherwise.\n * @param value The value to be checked.\n */\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n/**\n * Returns true if the value is an object, false otherwise.\n * Please, note that arrays are also objects in JavaScript.\n * @param value The value to be checked.\n */\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n/**\n * Returns true if the value is an Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isArray(value) {\n    return isObject(value) && Array.isArray(value);\n}\n/**\n * Returns true if the value is a Uint8Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isUint8Array(value) {\n    return value instanceof Uint8Array;\n}\n/**\n * Returns true if the value is a Buffer instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBuffer(value) {\n    return Buffer.isBuffer(value);\n}\n/**\n * Returns true if the value is a bigint, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBigInt(value) {\n    return typeof value === \"bigint\";\n}\n/**\n * Checks if the given value is a string that represents a valid bigint.\n * @param value The value to be checked if it's a stringified bigint.\n */\nfunction isStringifiedBigInt(value) {\n    // Check if value is a string first.\n    if (!isString(value)) {\n        return false;\n    }\n    try {\n        // Attempt to convert the string to BigInt.\n        BigInt(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Checks if a string is a valid hexadecimal string representation.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param value The string to be tested.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction isHexadecimal(value, prefix = true) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (prefix) {\n        return /^(0x|0X)[0-9a-fA-F]+$/.test(value);\n    }\n    return /^[0-9a-fA-F]+$/.test(value);\n}\n/**\n * Checks if the given value can be considered as BigNumber.\n * A value is considered a BigNumber if it is a bigint or a string\n * that can be converted to a bigint (via `Bigint(s)`).\n * @param value The value to check.\n */\nfunction isBigNumber(value) {\n    return isBigInt(value) || isStringifiedBigInt(value);\n}\n/**\n * Checks if the given value can be considered as BigNumberish.\n * A value is considered BigNumberish if it meets\n * any of the following conditions: it's a number, a bigint, a string\n * that can be converted to a bigint, a hexadecimal\n * string, or a Buffer object.\n * @param value The value to check.\n */\nfunction isBigNumberish(value) {\n    return (isNumber(value) ||\n        isBigInt(value) ||\n        isStringifiedBigInt(value) ||\n        isHexadecimal(value) ||\n        isBuffer(value) ||\n        isUint8Array(value));\n}\n/**\n * Returns true if the value type is the same as the type passed\n * as the second parameter, false otherwise.\n * @param value\n * @param type The expected type.\n */\nfunction isType(value, type) {\n    switch (type) {\n        case \"number\":\n            return isNumber(value);\n        case \"string\":\n            return isString(value);\n        case \"function\":\n            return isFunction(value);\n        case \"Array\":\n            return isArray(value);\n        case \"Uint8Array\":\n            return isUint8Array(value);\n        case \"Buffer\":\n            return isBuffer(value);\n        case \"object\":\n            return isObject(value);\n        case \"bigint\":\n            return isBigInt(value);\n        case \"stringified-bigint\":\n            return isStringifiedBigInt(value);\n        case \"hexadecimal\":\n            return isHexadecimal(value);\n        case \"bignumber\":\n            return isBigNumber(value);\n        case \"bignumberish\":\n            return isBigNumberish(value);\n        default:\n            return false;\n    }\n}\n/**\n * Returns true if the type is being supported by this utility\n * functions, false otherwise.\n * @param type The type to be checked.\n */\nfunction isSupportedType(type) {\n    return supportedTypes.includes(type);\n}\n\nexport { isArray, isBigInt, isBigNumber, isBigNumberish, isBuffer, isDefined, isFunction, isHexadecimal, isNumber, isObject, isString, isStringifiedBigInt, isSupportedType, isType, isUint8Array, supportedTypes };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;;;;;;CAOC,GACD,cAAc,GACd,MAAM,iBAAiB;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD;;;CAGC,GACD,SAAS,UAAU,KAAK;IACpB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,WAAW,KAAK;IACrB,OAAO,OAAO,UAAU;AAC5B;AACA;;;;CAIC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,QAAQ,KAAK;IAClB,OAAO,SAAS,UAAU,MAAM,OAAO,CAAC;AAC5C;AACA;;;CAGC,GACD,SAAS,aAAa,KAAK;IACvB,OAAO,iBAAiB;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,+LAAM,CAAC,QAAQ,CAAC;AAC3B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,oBAAoB,KAAK;IAC9B,oCAAoC;IACpC,IAAI,CAAC,SAAS,QAAQ;QAClB,OAAO;IACX;IACA,IAAI;QACA,2CAA2C;QAC3C,OAAO;QACP,OAAO;IACX,EACA,UAAM;QACF,OAAO;IACX;AACJ;AACA;;;;;;;CAOC,GACD,SAAS,cAAc,KAAK;QAAE,SAAA,iEAAS;IACnC,IAAI,CAAC,SAAS,QAAQ;QAClB,OAAO;IACX;IACA,IAAI,QAAQ;QACR,OAAO,wBAAwB,IAAI,CAAC;IACxC;IACA,OAAO,iBAAiB,IAAI,CAAC;AACjC;AACA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACtB,OAAO,SAAS,UAAU,oBAAoB;AAClD;AACA;;;;;;;CAOC,GACD,SAAS,eAAe,KAAK;IACzB,OAAQ,SAAS,UACb,SAAS,UACT,oBAAoB,UACpB,cAAc,UACd,SAAS,UACT,aAAa;AACrB;AACA;;;;;CAKC,GACD,SAAS,OAAO,KAAK,EAAE,IAAI;IACvB,OAAQ;QACJ,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,WAAW;QACtB,KAAK;YACD,OAAO,QAAQ;QACnB,KAAK;YACD,OAAO,aAAa;QACxB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,oBAAoB;QAC/B,KAAK;YACD,OAAO,cAAc;QACzB,KAAK;YACD,OAAO,YAAY;QACvB,KAAK;YACD,OAAO,eAAe;QAC1B;YACI,OAAO;IACf;AACJ;AACA;;;;CAIC,GACD,SAAS,gBAAgB,IAAI;IACzB,OAAO,eAAe,QAAQ,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2310, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/lib.esm/error-handlers.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { isDefined, isNumber, isString, isFunction, isArray, isUint8Array, isBuffer, isObject, isBigInt, isStringifiedBigInt, isHexadecimal, isBigNumber, isBigNumberish, isSupportedType, isType } from './type-checks.js';\n\n/**\n * @module ErrorHandlers\n * This module is designed to provide utility functions for validating\n * function parameters. It includes functions that throw type errors if\n * the parameters do not meet specified criteria, such as being defined,\n * a number, a string, a function, or an array. This module helps ensure\n * that functions receive the correct types of inputs, enhancing code\n * reliability and reducing runtime errors.\n */\n/**\n * @throws Throws a type error if the parameter value has not been defined.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireDefined(parameterValue, parameterName) {\n    if (!isDefined(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not defined`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a number.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireNumber(parameterValue, parameterName) {\n    if (!isNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a number, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a string.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireString(parameterValue, parameterName) {\n    if (!isString(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a string, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a function.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireFunction(parameterValue, parameterName) {\n    if (!isFunction(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a function, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireArray(parameterValue, parameterName) {\n    if (!isArray(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Uint8Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireUint8Array(parameterValue, parameterName) {\n    if (!isUint8Array(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Uint8Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Buffer.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBuffer(parameterValue, parameterName) {\n    if (!isBuffer(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Buffer instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an object.\n * Please, note that arrays are also objects in JavaScript.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireObject(parameterValue, parameterName) {\n    if (!isObject(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an object, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigInt(parameterValue, parameterName) {\n    if (!isBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bigint, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a stringified bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireStringifiedBigInt(parameterValue, parameterName) {\n    if (!isStringifiedBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a stringified bigint`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a hexadecimal string.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction requireHexadecimal(parameterValue, parameterName, prefix = true) {\n    if (!isHexadecimal(parameterValue, prefix)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a hexadecimal string`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumber(parameterValue, parameterName) {\n    if (!isBigNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber-ish.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumberish(parameterValue, parameterName) {\n    if (!isBigNumberish(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber-ish`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value type is not part of the list of types.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireTypes(parameterValue, parameterName, types) {\n    for (const type of types) {\n        if (!isSupportedType(type)) {\n            throw new Error(`Type '${type}' is not supported`);\n        }\n    }\n    for (const type of types) {\n        if (isType(parameterValue, type)) {\n            return;\n        }\n    }\n    throw new TypeError(`Parameter '${parameterName}' is none of the following types: ${types.join(\", \")}`);\n}\n\nexport { requireArray, requireBigInt, requireBigNumber, requireBigNumberish, requireBuffer, requireDefined, requireFunction, requireHexadecimal, requireNumber, requireObject, requireString, requireStringifiedBigInt, requireTypes, requireUint8Array };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;;;;;;;CAQC,GACD;;;;CAIC,GACD,SAAS,eAAe,cAAc,EAAE,aAAa;IACjD,IAAI,CAAC,IAAA,6PAAS,EAAC,iBAAiB;QAC5B,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,cAAc,cAAc,EAAE,aAAa;IAChD,IAAI,CAAC,IAAA,4PAAQ,EAAC,iBAAiB;QAC3B,MAAM,IAAI,UAAU,AAAC,cAA+D,OAAlD,eAAc,sCAA0D,OAAtB,OAAO;IAC/F;AACJ;AACA;;;;CAIC,GACD,SAAS,cAAc,cAAc,EAAE,aAAa;IAChD,IAAI,CAAC,IAAA,4PAAQ,EAAC,iBAAiB;QAC3B,MAAM,IAAI,UAAU,AAAC,cAA+D,OAAlD,eAAc,sCAA0D,OAAtB,OAAO;IAC/F;AACJ;AACA;;;;CAIC,GACD,SAAS,gBAAgB,cAAc,EAAE,aAAa;IAClD,IAAI,CAAC,IAAA,8PAAU,EAAC,iBAAiB;QAC7B,MAAM,IAAI,UAAU,AAAC,cAAiE,OAApD,eAAc,wCAA4D,OAAtB,OAAO;IACjG;AACJ;AACA;;;;CAIC,GACD,SAAS,aAAa,cAAc,EAAE,aAAa;IAC/C,IAAI,CAAC,IAAA,2PAAO,EAAC,iBAAiB;QAC1B,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,kBAAkB,cAAc,EAAE,aAAa;IACpD,IAAI,CAAC,IAAA,gQAAY,EAAC,iBAAiB;QAC/B,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,cAAc,cAAc,EAAE,aAAa;IAChD,IAAI,CAAC,IAAA,4PAAQ,EAAC,iBAAiB;QAC3B,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;;CAKC,GACD,SAAS,cAAc,cAAc,EAAE,aAAa;IAChD,IAAI,CAAC,IAAA,4PAAQ,EAAC,iBAAiB;QAC3B,MAAM,IAAI,UAAU,AAAC,cAAgE,OAAnD,eAAc,uCAA2D,OAAtB,OAAO;IAChG;AACJ;AACA;;;;CAIC,GACD,SAAS,cAAc,cAAc,EAAE,aAAa;IAChD,IAAI,CAAC,IAAA,4PAAQ,EAAC,iBAAiB;QAC3B,MAAM,IAAI,UAAU,AAAC,cAA+D,OAAlD,eAAc,sCAA0D,OAAtB,OAAO;IAC/F;AACJ;AACA;;;;CAIC,GACD,SAAS,yBAAyB,cAAc,EAAE,aAAa;IAC3D,IAAI,CAAC,IAAA,uQAAmB,EAAC,iBAAiB;QACtC,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;;;;;CAQC,GACD,SAAS,mBAAmB,cAAc,EAAE,aAAa;QAAE,SAAA,iEAAS;IAChE,IAAI,CAAC,IAAA,iQAAa,EAAC,gBAAgB,SAAS;QACxC,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,iBAAiB,cAAc,EAAE,aAAa;IACnD,IAAI,CAAC,IAAA,+PAAW,EAAC,iBAAiB;QAC9B,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,oBAAoB,cAAc,EAAE,aAAa;IACtD,IAAI,CAAC,IAAA,kQAAc,EAAC,iBAAiB;QACjC,MAAM,IAAI,UAAU,AAAC,cAA2B,OAAd,eAAc;IACpD;AACJ;AACA;;;;CAIC,GACD,SAAS,aAAa,cAAc,EAAE,aAAa,EAAE,KAAK;IACtD,KAAK,MAAM,QAAQ,MAAO;QACtB,IAAI,CAAC,IAAA,mQAAe,EAAC,OAAO;YACxB,MAAM,IAAI,MAAM,AAAC,SAAa,OAAL,MAAK;QAClC;IACJ;IACA,KAAK,MAAM,QAAQ,MAAO;QACtB,IAAI,IAAA,0PAAM,EAAC,gBAAgB,OAAO;YAC9B;QACJ;IACJ;IACA,MAAM,IAAI,UAAU,AAAC,cAA+D,OAAlD,eAAc,sCAAqD,OAAjB,MAAM,IAAI,CAAC;AACnG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/lib.esm/conversions.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { Buffer } from 'buffer';\nimport { requireBigInt, requireTypes, requireBigNumberish, requireHexadecimal, requireString } from './error-handlers.js';\nimport { isHexadecimal, isBuffer, isUint8Array } from './type-checks.js';\n\n/**\n * @module Conversions\n * This module provides a collection of utility functions for converting\n * between different numerical formats, particularly focusing on\n * conversions involving bigints, hexadecimals and buffers.\n * The module is structured with clear function naming to indicate\n * the conversion direction (e.g., `bigIntToHexadecimal` for BigInt\n * to hexadecimal, `bufferToBigInt` for buffer to bigint) and employs\n * type checks to ensure the correct handling of various input types.\n * It also includes variations for both big-endian (`be`) and little-endian\n * (`le`) conversions. It is important to note that when there is no prefix,\n * the order of bytes is always big-endian.\n */\n/**\n * Converts a bigint to a hexadecimal string.\n * @param value The bigint value to convert.\n * @returns The hexadecimal representation of the bigint.\n */\nfunction bigIntToHexadecimal(value) {\n    requireBigInt(value, \"value\");\n    let hex = value.toString(16);\n    // Ensure even length.\n    if (hex.length % 2 !== 0) {\n        hex = `0${hex}`;\n    }\n    return hex;\n}\n/**\n * Converts a hexadecimal string to a bigint. The input is interpreted as hexadecimal\n * with or without a '0x' prefix. It uses big-endian byte order.\n * @param value The hexadecimal string to convert.\n * @returns The bigint representation of the hexadecimal string.\n */\nfunction hexadecimalToBigInt(value) {\n    if (!isHexadecimal(value) && !isHexadecimal(value, false)) {\n        throw new TypeError(`Parameter 'value' is not a hexadecimal string`);\n    }\n    // Ensure the hex string starts with '0x'.\n    const formattedHexString = value.startsWith(\"0x\") ? value : `0x${value}`;\n    return BigInt(formattedHexString);\n}\n/**\n * Converts a buffer of bytes to a bigint using big-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction beBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint using little-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents in little-endian.\n */\nfunction leBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).reverse().toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint. Alias for beBufferToBigInt.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction bufferToBigInt(value) {\n    return beBufferToBigInt(value);\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses big-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint.\n */\nfunction beBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\");\n    fromHex.copy(buffer, size - fromHex.length);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses little-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint in little-endian.\n */\nfunction leBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\").reverse();\n    fromHex.copy(buffer, 0);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer. Alias for beBigIntToBuffer.\n * @param value The bigint to convert.\n * @returns The buffer representation of the bigint.\n */\nfunction bigIntToBuffer(value) {\n    return beBigIntToBuffer(value);\n}\n/**\n * Converts a BigNumberish type to a bigint. If the input is already a bigint,\n * the return value will be the bigint itself, otherwise it will be converted\n * to a bigint using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The bigint representation of the BigNumberish value.\n */\nfunction bigNumberishToBigInt(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return bufferToBigInt(value);\n    }\n    return BigInt(value);\n}\n/**\n * Converts a BigNumberish type to a buffer. If the input is already a buffer,\n * the return value will be the buffer itself, otherwise it will be converted\n * to a buffer using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The buffer representation of the BigNumberish value.\n */\nfunction bigNumberishToBuffer(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return Buffer.from(value);\n    }\n    return bigIntToBuffer(bigNumberishToBigInt(value));\n}\n/**\n * Converts an hexadecimal string to a buffer. The hexadecimal string\n * should not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The hexadecimal string to convert.\n * @returns The buffer representation of the hexadecimal string.\n */\nfunction hexadecimalToBuffer(value) {\n    requireHexadecimal(value, \"value\", false);\n    // Ensure even length before converting to buffer.\n    if (value.length % 2 !== 0) {\n        value = `0${value}`;\n    }\n    return Buffer.from(value, \"hex\");\n}\n/**\n * Converts a buffer to a hexadecimal string. It accepts 'Buffer' or 'Uint8Array'.\n * The hexadecimal string will not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The buffer to convert.\n * @returns The converted hexadecimal string.\n */\nfunction bufferToHexadecimal(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"hex\");\n}\n/**\n * Converts bytes to a base64 string. It accepts 'Buffer' or 'Uint8Array'.\n * @param value The bytes to convert.\n * @returns The converted base64 string.\n */\nfunction bufferToBase64(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Converts a base64 string to bytes (i.e. a buffer). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they will be ignored.\n * @param value The base64 string to convert.\n * @returns The converted buffer.\n */\nfunction base64ToBuffer(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Converts text (utf8) to a base64 string.\n * @param value The text to convert.\n * @returns The converted base64 string.\n */\nfunction textToBase64(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"utf8\").toString(\"base64\");\n}\n/**\n * Converts a base64 string to text (utf8). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they could be ignored and the result may be unexpected.\n * @param value The base64 string to convert.\n * @returns The converted text.\n */\nfunction base64ToText(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\").toString(\"utf8\");\n}\n\nexport { base64ToBuffer, base64ToText, beBigIntToBuffer, beBufferToBigInt, bigIntToBuffer, bigIntToHexadecimal, bigNumberishToBigInt, bigNumberishToBuffer, bufferToBase64, bufferToBigInt, bufferToHexadecimal, hexadecimalToBigInt, hexadecimalToBuffer, leBigIntToBuffer, leBufferToBigInt, textToBase64 };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2770, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/lib.esm/scalar.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\n/**\n * @module Scalar\n * This module provides utility functions for performing scalar operations\n * within a field, especially designed to handle operations on bigints.\n * The operations include scalar inversion (`inv`), scalar exponentiation (`pow`),\n * and modular reduction. Functions are carefully implemented to ensure\n * mathematical correctness and efficiency, supporting both positive and\n * negative bigint values. The module aims to provide robust tools for\n * cryptographic calculations and other applications requiring high-precision\n * arithmetic in fields.\n */\n/**\n * Checks if a bigint scalar value is zero.\n * @param a The bigint scalar value to check.\n * @returns True if 'a' is zero, false otherwise.\n */\nfunction isZero(a) {\n    return !a;\n}\n/**\n * Determines whether a bigint scalar value is odd.\n * @param a The bigint scalar value to check.\n * @returns True if 'a' is odd, false if it is even.\n */\nfunction isOdd(a) {\n    return (a & BigInt(1)) === BigInt(1);\n}\n/**\n * Performs a bitwise right shift on a bigint scalar value.\n * This operation is equivalent to dividing by 2^n, but it operates directly\n * on the binary representation, making it efficient for certain types of calculations.\n * @param a The bigint scalar value to shift.\n * @param n The number of bits to shift 'a' by.\n * @returns The result of shifting 'a' right by 'n' bits.\n */\nfunction shiftRight(a, n) {\n    return a >> n;\n}\n/**\n * Multiplies two bigint scalar values.\n * @param a The first bigint scalar value.\n * @param b The second bigint scalar value.\n * @returns The product of 'a' and 'b'.\n */\nfunction mul(a, b) {\n    return a * b;\n}\n/**\n * Compares two bigint scalar values to determine if the first is greater than the second.\n * @param a The first bigint scalar value to compare.\n * @param b The second bigint scalar value to compare.\n * @returns True if 'a' is greater than 'b', false otherwise.\n */\nfunction gt(a, b) {\n    return a > b;\n}\n/**\n * Converts a bigint scalar value into an array of bits, represented as numbers.\n * This function is particularly useful for examining the binary structure of bigints,\n * which can be necessary for bit manipulation and understanding the representation\n * of numbers at a lower level.\n * @param n The bigint scalar value to convert into bits.\n * @returns An array of numbers representing the bits of 'n', starting from the least significant bit.\n */\nfunction bits(n) {\n    const res = [];\n    let E = n;\n    while (E) {\n        if (E & BigInt(1)) {\n            res.push(1);\n        }\n        else {\n            res.push(0);\n        }\n        E >>= BigInt(1);\n    }\n    return res;\n}\n\nexport { bits, gt, isOdd, isZero, mul, shiftRight };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA,GACA;;;;;;;;;;CAUC,GACD;;;;CAIC;;;;;;;;;;;;;;AACD,SAAS,OAAO,CAAC;IACb,OAAO,CAAC;AACZ;AACA;;;;CAIC,GACD,SAAS,MAAM,CAAC;IACZ,OAAO,CAAC,IAAI,OAAO,EAAE,MAAM,OAAO;AACtC;AACA;;;;;;;CAOC,GACD,SAAS,WAAW,CAAC,EAAE,CAAC;IACpB,OAAO,KAAK;AAChB;AACA;;;;;CAKC,GACD,SAAS,IAAI,CAAC,EAAE,CAAC;IACb,OAAO,IAAI;AACf;AACA;;;;;CAKC,GACD,SAAS,GAAG,CAAC,EAAE,CAAC;IACZ,OAAO,IAAI;AACf;AACA;;;;;;;CAOC,GACD,SAAS,KAAK,CAAC;IACX,MAAM,MAAM,EAAE;IACd,IAAI,IAAI;IACR,MAAO,EAAG;QACN,IAAI,IAAI,OAAO,IAAI;YACf,IAAI,IAAI,CAAC;QACb,OACK;YACD,IAAI,IAAI,CAAC;QACb;QACA,MAAM,OAAO;IACjB;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2866, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/lib.esm/f1-field.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { isZero, bits } from './scalar.js';\n\n/**\n * @class F1Field\n * Represents a finite field of order 'order' providing arithmetic operations under modulus.\n * This class includes operations such as addition, subtraction, multiplication, division,\n * and inversion, all performed modulo the field's order. It's designed to work with bigints,\n * supporting large numbers for cryptographic purposes and other applications requiring\n * modular arithmetic.\n * Note that the outputs of the functions will always be within the field if and only if\n * the input values are within the field. Devs need to make sure of that.\n *\n * @property one Represents the scalar value 1 in the field.\n * @property zero Represents the scalar value 0 in the field.\n * @property _order The order of the finite field (i.e., the modulus).\n * @property _half Half the order of the field, used for certain comparisons.\n * @property _negone The scalar value -1 in the field, represented positively.\n */\nclass F1Field {\n    constructor(order) {\n        this.one = 1n;\n        this.zero = 0n;\n        this._order = order;\n        this._half = order >> this.one;\n        this._negone = this._order - this.one;\n    }\n    /**\n     * Ensures a given result falls within the field by applying modular reduction.\n     * This method also handles negative inputs, correctly mapping them into the field.\n     * @param res The result to be normalized to the field.\n     * @returns The equivalent value within the field.\n     */\n    e(res) {\n        res %= this._order;\n        return res < 0 ? res + this._order : res;\n    }\n    /**\n     * Performs modular multiplication of two bigint values within the field.\n     * @param a The first value.\n     * @param b The second value.\n     * @returns The product of 'a' and 'b' modulo the field's order.\n     */\n    mul(a, b) {\n        return (a * b) % this._order;\n    }\n    /**\n     * Subtracts one bigint from another under modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value from which to subtract.\n     * @param b The value to be subtracted.\n     * @returns The difference of 'a' and 'b' modulo the field's order.\n     */\n    sub(a, b) {\n        return a >= b ? a - b : this._order - b + a;\n    }\n    /**\n     * Adds two bigint values together under modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value.\n     * @param b The second value.\n     * @returns The sum of 'a' and 'b' modulo the field's order.\n     */\n    add(a, b) {\n        const res = a + b;\n        return res >= this._order ? res - this._order : res;\n    }\n    /**\n     * Computes the multiplicative inverse of a given value within the field.\n     * This method uses the Extended Euclidean Algorithm to find the inverse,\n     * ensuring the result is always a positive value less than the field's order.\n     * If the input value is zero, which has no inverse, an error is thrown.\n     * @param a The value for which to compute the inverse.\n     * @returns The multiplicative inverse of 'a' modulo the field's order.\n     * @throws if 'a' is zero.\n     */\n    inv(a) {\n        if (a === this.zero) {\n            throw new Error(\"Zero has no inverse\");\n        }\n        let t = this.zero;\n        let r = this._order;\n        let newt = this.one;\n        let newr = a % this._order;\n        while (newr) {\n            const q = r / newr;\n            [t, newt] = [newt, t - q * newt];\n            [r, newr] = [newr, r - q * newr];\n        }\n        if (t < this.zero) {\n            t += this._order;\n        }\n        return t;\n    }\n    /**\n     * Divides one bigint by another within the field by multiplying the first value\n     * by the multiplicative inverse of the second.\n     * @param a The dividend.\n     * @param b The divisor.\n     * @returns The result of the division of 'a' by 'b' modulo the field's order.\n     */\n    div(a, b) {\n        return this.mul(a, this.inv(b));\n    }\n    /**\n     * Checks if two bigint values are equal within the context of the field.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' equals 'b', false otherwise.\n     */\n    eq(a, b) {\n        return a === b;\n    }\n    /**\n     * Squares a bigint value within the field.\n     * This is a specific case of multiplication where the value is multiplied by itself,\n     * optimized for performance where applicable.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value to square.\n     * @returns The square of 'a' modulo the field's order.\n     */\n    square(a) {\n        return (a * a) % this._order;\n    }\n    /**\n     * Compares two bigint values to determine if the first is less than the second,\n     * taking into account the field's order for modular comparison.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' is less than 'b', false otherwise.\n     */\n    lt(a, b) {\n        const aa = a > this._half ? a - this._order : a;\n        const bb = b > this._half ? b - this._order : b;\n        return aa < bb;\n    }\n    /**\n     * Compares two bigint values to determine if the first is greater than or equal to the second,\n     * considering the field's modular context.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' is greater than or equal to 'b', false otherwise.\n     */\n    geq(a, b) {\n        const aa = a > this._half ? a - this._order : a;\n        const bb = b > this._half ? b - this._order : b;\n        return aa >= bb;\n    }\n    /**\n     * Computes the negation of a bigint value within the field.\n     * The result is the modular additive inverse that, when added to the original value,\n     * yields zero in the field's modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value to negate.\n     * @returns The negation of 'a' modulo the field's order.\n     */\n    neg(a) {\n        return a ? this._order - a : a;\n    }\n    /**\n     * Checks if a bigint value is zero within the context of the field.\n     * @param a The value to check.\n     * @returns True if 'a' is zero, false otherwise.\n     */\n    isZero(a) {\n        return a === this.zero;\n    }\n    /**\n     * Raises a base to an exponent within the field, efficiently computing\n     * scalar exponentiation using the square-and-multiply algorithm.\n     * Supports both positive and negative exponents through the use of the `inv` method for negatives.\n     * @param base The base to be exponentiated.\n     * @param e The exponent.\n     * @returns The result of raising 'base' to the power 'e' modulo the field's order.\n     */\n    pow(base, e) {\n        if (isZero(e)) {\n            return this.one;\n        }\n        if (e < 0n) {\n            base = this.inv(base);\n            e = -e;\n        }\n        const n = bits(e);\n        if (n.length === 0) {\n            return this.one;\n        }\n        let res = base;\n        for (let i = n.length - 2; i >= 0; i -= 1) {\n            res = this.square(res);\n            if (n[i]) {\n                res = this.mul(res, base);\n            }\n        }\n        return res;\n    }\n}\n\nexport { F1Field as default };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3073, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Bbaby-jubjub%401.0.3/node_modules/%40zk-kit/baby-jubjub/dist/index.js"],"sourcesContent":["/**\n * @module @zk-kit/baby-jubjub\n * @version 1.0.3\n * @file A JavaScript library for adding points to the curve.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/baby-jubjub}\n*/\nimport { leBigIntToBuffer, leBufferToBigInt } from '@zk-kit/utils/conversions';\nimport F1Field from '@zk-kit/utils/f1-field';\nimport * as scalar from '@zk-kit/utils/scalar';\n\n/**\n * The following is a sqrt function (i.e. tonelliShanks) with some pre-computed\n * constants and it only works with 'r'.\n * See {@link https://eprint.iacr.org/2012/685.pdf} and\n * {@link https://github.com/iden3/ffjavascript/blob/6f37a93fabddf45100bf221de6a1399599497e5d/src/fsqrt.js#L38}\n * for more.\n * @param n The number for which to calculate the square root.\n * @returns The square root.\n */\n// eslint-disable-next-line import/prefer-default-export\nfunction tonelliShanks(n, order) {\n    const Fr = new F1Field(order);\n    const sqrt_s = 28;\n    const sqrt_z = BigInt(\"5978345932401256595026418116861078668372907927053715034645334559810731495452\");\n    const sqrt_tm1d2 = BigInt(\"40770029410420498293352137776570907027550720424234931066070132305055\");\n    if (Fr.isZero(n))\n        return Fr.zero;\n    let w = Fr.pow(n, sqrt_tm1d2);\n    const a0 = Fr.pow(Fr.mul(Fr.square(w), n), BigInt(2 ** (sqrt_s - 1)));\n    if (Fr.eq(a0, Fr._negone)) {\n        return null;\n    }\n    let v = sqrt_s;\n    let x = Fr.mul(n, w);\n    let b = Fr.mul(x, w);\n    let z = sqrt_z;\n    while (!Fr.eq(b, Fr.one)) {\n        let b2k = Fr.square(b);\n        let k = 1;\n        while (!Fr.eq(b2k, Fr.one)) {\n            b2k = Fr.square(b2k);\n            k += 1;\n        }\n        w = z;\n        for (let i = 0; i < v - k - 1; i += 1) {\n            w = Fr.square(w);\n        }\n        z = Fr.square(w);\n        b = Fr.mul(b, z);\n        x = Fr.mul(x, w);\n        v = k;\n    }\n    return Fr.geq(x, Fr.zero) ? x : Fr.neg(x);\n}\n\n/**\n * Constants and curve parameters for BabyJubJub elliptic curve operations.\n * See: {@link https://eips.ethereum.org/EIPS/eip-2494}\n */\n// Prime order of the alt_bn128 curve.\nconst r = BigInt(\"21888242871839275222246405745257275088548364400416034343698204186575808495617\");\n// Prime finite field 'F' with r elements (F_r).\nconst Fr = new F1Field(r);\n// Base point for generating other points on the Baby Jubjub curve.\nconst Base8 = [\n    Fr.e(BigInt(\"5299619240641551281634865583518297030282874472190772894086521144482721001553\")),\n    Fr.e(BigInt(\"16950150798460657717958625567821834550301663161624707787222815936182638968203\"))\n];\n// Curve parameters from the equation 'ax^2 + y^2 = 1 + dx^2y^2',\n// representing a Twisted Edwards Elliptic Curve E defined over 'F_r'.\nconst a = Fr.e(BigInt(\"168700\"));\nconst d = Fr.e(BigInt(\"168696\"));\n// The Baby JubJub curve 'E(F_r)' is equal to the subgroup of 'F_r'-rational points of 'E'.\nconst order = BigInt(\"21888242871839275222246405745257275088614511777268538073601725287587578984328\");\nconst subOrder = scalar.shiftRight(order, BigInt(3));\n/**\n * Performs point addition on the Baby Jubjub elliptic curve,\n * calculating a third point from two given points.\n * Let P1 = (x1, y1) and P2 = (x2, y2) be two arbitrary points of the curve.\n * Then P1 + P2 = (x3, y3) is calculated in the following way:\n * x3 = (x1*y2 + y1*x2)/(1 + d*x1*x2*y1*y2)\n * y3 = (y1*y2 - a*x1*x2)/(1 - d*x1*x2*y1*y2)\n * @param p1 First point on the curve.\n * @param p2 Second point on the curve.\n * @returns Resultant third point on the curve.\n */\nfunction addPoint(p1, p2) {\n    // beta = x1*y2\n    const beta = Fr.mul(p1[0], p2[1]);\n    // gamma = y1*x2\n    const gamma = Fr.mul(p1[1], p2[0]);\n    // delta = (y1-(a*x1))*(x2+y2)\n    const delta = Fr.mul(Fr.sub(p1[1], Fr.mul(a, p1[0])), Fr.add(p2[0], p2[1]));\n    // x1*x2*y1*y2\n    const tau = Fr.mul(beta, gamma);\n    // d*x1*x2*y1*y2\n    const dtau = Fr.mul(d, tau);\n    // x3 = (x1*y2 + y1*x2)/(1 + d*x1*x2*y1*y2)\n    const p3x = Fr.div(Fr.add(beta, gamma), Fr.add(Fr.one, dtau));\n    // y3 = (y1*y2 - a*x1*x2)/(1 - d*x1*x2*y1*y2)\n    const p3y = Fr.div(Fr.add(delta, Fr.sub(Fr.mul(a, beta), gamma)), Fr.sub(Fr.one, dtau));\n    return [p3x, p3y];\n}\n/**\n * Performs a scalar multiplication by starting from the 'base' point and 'adding'\n * it to itself 'e' times.\n * @param base The base point used as a starting point.\n * @param e A secret number representing the private key.\n * @returns The resulting point representing the public key.\n */\nfunction mulPointEscalar(base, e) {\n    let res = [Fr.e(BigInt(0)), Fr.e(BigInt(1))];\n    let rem = e;\n    let exp = base;\n    while (!scalar.isZero(rem)) {\n        if (scalar.isOdd(rem)) {\n            res = addPoint(res, exp);\n        }\n        exp = addPoint(exp, exp);\n        rem = scalar.shiftRight(rem, BigInt(1));\n    }\n    return res;\n}\n/**\n * Determines if a given point lies on the Baby Jubjub elliptic curve by verifying the curve equation.\n * This function checks if the point satisfies the curve equation `ax^2 + y^2 = 1 + dx^2y^2`.\n * @param p The point to check, represented as a pair of bigint values.\n * @returns True if the point is on the curve, otherwise false.\n */\nfunction inCurve(p) {\n    const x1 = BigInt(p[0]);\n    const y1 = BigInt(p[1]);\n    const x2 = Fr.square(x1);\n    const y2 = Fr.square(y1);\n    return Fr.eq(Fr.add(Fr.mul(a, x2), y2), Fr.add(Fr.one, Fr.mul(Fr.mul(x2, y2), d)));\n}\n/**\n * Packs a point on the Baby Jubjub elliptic curve into a bigint.\n * This process involves converting the y-coordinate to a buffer and conditionally modifying the last byte\n * to encode the sign of the x-coordinate, following a specific compact representation format.\n * @param unpackedPoint The point to be packed, consisting of x and y coordinates.\n * @returns The packed representation of the point as a bigint.\n */\nfunction packPoint(unpackedPoint) {\n    const buffer = leBigIntToBuffer(unpackedPoint[1], 32);\n    if (Fr.lt(unpackedPoint[0], Fr.zero)) {\n        buffer[31] |= 0x80;\n    }\n    return leBufferToBigInt(buffer);\n}\n/**\n * Unpacks a bigint back into a point on the Baby Jubjub elliptic curve, reversing the packing process.\n * This involves interpreting the bigint as the y-coordinate and extracting the sign of the x-coordinate\n * from the encoded format. The function then calculates the x-coordinate using the curve equation.\n * @param packedPoint The packed point as a bigint.\n * @returns The unpacked point as a pair of bigint values, or null if the point is invalid.\n */\nfunction unpackPoint(packedPoint) {\n    const buffer = leBigIntToBuffer(packedPoint);\n    const unpackedPoint = new Array(2);\n    let sign = false;\n    if (buffer[31] & 0x80) {\n        sign = true;\n        buffer[31] &= 0x7f;\n    }\n    unpackedPoint[1] = leBufferToBigInt(buffer);\n    if (scalar.gt(unpackedPoint[1], r)) {\n        return null;\n    }\n    const y2 = Fr.square(unpackedPoint[1]);\n    let x = tonelliShanks(Fr.div(Fr.sub(Fr.one, y2), Fr.sub(a, Fr.mul(d, y2))), r);\n    if (x == null) {\n        return null;\n    }\n    if (sign) {\n        x = Fr.neg(x);\n    }\n    unpackedPoint[0] = x;\n    return unpackedPoint;\n}\n\nexport { Base8, Fr, addPoint, inCurve, mulPointEscalar, order, packPoint, r, subOrder, unpackPoint };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3280, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.2.1/node_modules/%40zk-kit/utils/dist/index.browser.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.2.1\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { Buffer } from 'buffer';\nexport { Buffer } from 'buffer';\n\n/**\n * @module TypeChecks\n * This module provides utility functions to check data types.\n * It defines a set of supported types and includes functions to check if\n * a value is defined and if it matches a supported type. These functions\n * are useful for type checking and validation in the other libraries,\n * enhancing code robustness and reliability.\n */\n/** @internal */\nconst supportedTypes = [\n    \"number\",\n    \"string\",\n    \"function\",\n    \"Array\",\n    \"Uint8Array\",\n    \"Buffer\",\n    \"object\",\n    \"bigint\",\n    \"stringified-bigint\",\n    \"hexadecimal\",\n    \"bignumber\",\n    \"bignumberish\"\n];\n/**\n * Returns true if the value is defined, false otherwise.\n * @param value The value to be checked.\n */\nfunction isDefined(value) {\n    return typeof value !== \"undefined\";\n}\n/**\n * Returns true if the value is a number, false otherwise.\n * @param value The value to be checked.\n */\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\n/**\n * Returns true if the value is a string, false otherwise.\n * @param value The value to be checked.\n */\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n/**\n * Returns true if the value is a function, false otherwise.\n * @param value The value to be checked.\n */\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n/**\n * Returns true if the value is an object, false otherwise.\n * Please, note that arrays are also objects in JavaScript.\n * @param value The value to be checked.\n */\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n/**\n * Returns true if the value is an Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isArray(value) {\n    return isObject(value) && Array.isArray(value);\n}\n/**\n * Returns true if the value is a Uint8Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isUint8Array(value) {\n    return value instanceof Uint8Array;\n}\n/**\n * Returns true if the value is a Buffer instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBuffer(value) {\n    return Buffer.isBuffer(value);\n}\n/**\n * Returns true if the value is a bigint, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBigInt(value) {\n    return typeof value === \"bigint\";\n}\n/**\n * Checks if the given value is a string that represents a valid bigint.\n * @param value The value to be checked if it's a stringified bigint.\n */\nfunction isStringifiedBigInt(value) {\n    // Check if value is a string first.\n    if (!isString(value)) {\n        return false;\n    }\n    try {\n        // Attempt to convert the string to BigInt.\n        BigInt(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Checks if a string is a valid hexadecimal string representation.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param value The string to be tested.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction isHexadecimal(value, prefix = true) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (prefix) {\n        return /^(0x|0X)[0-9a-fA-F]+$/.test(value);\n    }\n    return /^[0-9a-fA-F]+$/.test(value);\n}\n/**\n * Checks if the given value can be considered as BigNumber.\n * A value is considered a BigNumber if it is a bigint or a string\n * that can be converted to a bigint (via `Bigint(s)`).\n * @param value The value to check.\n */\nfunction isBigNumber(value) {\n    return isBigInt(value) || isStringifiedBigInt(value);\n}\n/**\n * Checks if the given value can be considered as BigNumberish.\n * A value is considered BigNumberish if it meets\n * any of the following conditions: it's a number, a bigint, a string\n * that can be converted to a bigint, a hexadecimal\n * string, or a Buffer object.\n * @param value The value to check.\n */\nfunction isBigNumberish(value) {\n    return (isNumber(value) ||\n        isBigInt(value) ||\n        isStringifiedBigInt(value) ||\n        isHexadecimal(value) ||\n        isBuffer(value) ||\n        isUint8Array(value));\n}\n/**\n * Returns true if the value type is the same as the type passed\n * as the second parameter, false otherwise.\n * @param value\n * @param type The expected type.\n */\nfunction isType(value, type) {\n    switch (type) {\n        case \"number\":\n            return isNumber(value);\n        case \"string\":\n            return isString(value);\n        case \"function\":\n            return isFunction(value);\n        case \"Array\":\n            return isArray(value);\n        case \"Uint8Array\":\n            return isUint8Array(value);\n        case \"Buffer\":\n            return isBuffer(value);\n        case \"object\":\n            return isObject(value);\n        case \"bigint\":\n            return isBigInt(value);\n        case \"stringified-bigint\":\n            return isStringifiedBigInt(value);\n        case \"hexadecimal\":\n            return isHexadecimal(value);\n        case \"bignumber\":\n            return isBigNumber(value);\n        case \"bignumberish\":\n            return isBigNumberish(value);\n        default:\n            return false;\n    }\n}\n/**\n * Returns true if the type is being supported by this utility\n * functions, false otherwise.\n * @param type The type to be checked.\n */\nfunction isSupportedType(type) {\n    return supportedTypes.includes(type);\n}\n\nvar typeChecks = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isArray: isArray,\n    isBigInt: isBigInt,\n    isBigNumber: isBigNumber,\n    isBigNumberish: isBigNumberish,\n    isBuffer: isBuffer,\n    isDefined: isDefined,\n    isFunction: isFunction,\n    isHexadecimal: isHexadecimal,\n    isNumber: isNumber,\n    isObject: isObject,\n    isString: isString,\n    isStringifiedBigInt: isStringifiedBigInt,\n    isSupportedType: isSupportedType,\n    isType: isType,\n    isUint8Array: isUint8Array,\n    supportedTypes: supportedTypes\n});\n\n/**\n * @module ErrorHandlers\n * This module is designed to provide utility functions for validating\n * function parameters. It includes functions that throw type errors if\n * the parameters do not meet specified criteria, such as being defined,\n * a number, a string, a function, or an array. This module helps ensure\n * that functions receive the correct types of inputs, enhancing code\n * reliability and reducing runtime errors.\n */\n/**\n * @throws Throws a type error if the parameter value has not been defined.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireDefined(parameterValue, parameterName) {\n    if (!isDefined(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not defined`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a number.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireNumber(parameterValue, parameterName) {\n    if (!isNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a number, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a string.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireString(parameterValue, parameterName) {\n    if (!isString(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a string, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a function.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireFunction(parameterValue, parameterName) {\n    if (!isFunction(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a function, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireArray(parameterValue, parameterName) {\n    if (!isArray(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Uint8Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireUint8Array(parameterValue, parameterName) {\n    if (!isUint8Array(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Uint8Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Buffer.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBuffer(parameterValue, parameterName) {\n    if (!isBuffer(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Buffer instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an object.\n * Please, note that arrays are also objects in JavaScript.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireObject(parameterValue, parameterName) {\n    if (!isObject(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an object, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigInt(parameterValue, parameterName) {\n    if (!isBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bigint, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a stringified bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireStringifiedBigInt(parameterValue, parameterName) {\n    if (!isStringifiedBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a stringified bigint`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a hexadecimal string.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction requireHexadecimal(parameterValue, parameterName, prefix = true) {\n    if (!isHexadecimal(parameterValue, prefix)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a hexadecimal string`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumber(parameterValue, parameterName) {\n    if (!isBigNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber-ish.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumberish(parameterValue, parameterName) {\n    if (!isBigNumberish(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber-ish`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value type is not part of the list of types.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireTypes(parameterValue, parameterName, types) {\n    for (const type of types) {\n        if (!isSupportedType(type)) {\n            throw new Error(`Type '${type}' is not supported`);\n        }\n    }\n    for (const type of types) {\n        if (isType(parameterValue, type)) {\n            return;\n        }\n    }\n    throw new TypeError(`Parameter '${parameterName}' is none of the following types: ${types.join(\", \")}`);\n}\n\nvar errorHandlers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    requireArray: requireArray,\n    requireBigInt: requireBigInt,\n    requireBigNumber: requireBigNumber,\n    requireBigNumberish: requireBigNumberish,\n    requireBuffer: requireBuffer,\n    requireDefined: requireDefined,\n    requireFunction: requireFunction,\n    requireHexadecimal: requireHexadecimal,\n    requireNumber: requireNumber,\n    requireObject: requireObject,\n    requireString: requireString,\n    requireStringifiedBigInt: requireStringifiedBigInt,\n    requireTypes: requireTypes,\n    requireUint8Array: requireUint8Array\n});\n\n/**\n * @module Conversions\n * This module provides a collection of utility functions for converting\n * between different numerical formats, particularly focusing on\n * conversions involving bigints, hexadecimals and buffers.\n * The module is structured with clear function naming to indicate\n * the conversion direction (e.g., `bigIntToHexadecimal` for BigInt\n * to hexadecimal, `bufferToBigInt` for buffer to bigint) and employs\n * type checks to ensure the correct handling of various input types.\n * It also includes variations for both big-endian (`be`) and little-endian\n * (`le`) conversions. It is important to note that when there is no prefix,\n * the order of bytes is always big-endian.\n */\n/**\n * Converts a bigint to a hexadecimal string.\n * @param value The bigint value to convert.\n * @returns The hexadecimal representation of the bigint.\n */\nfunction bigIntToHexadecimal(value) {\n    requireBigInt(value, \"value\");\n    let hex = value.toString(16);\n    // Ensure even length.\n    if (hex.length % 2 !== 0) {\n        hex = `0${hex}`;\n    }\n    return hex;\n}\n/**\n * Converts a hexadecimal string to a bigint. The input is interpreted as hexadecimal\n * with or without a '0x' prefix. It uses big-endian byte order.\n * @param value The hexadecimal string to convert.\n * @returns The bigint representation of the hexadecimal string.\n */\nfunction hexadecimalToBigInt(value) {\n    if (!isHexadecimal(value) && !isHexadecimal(value, false)) {\n        throw new TypeError(`Parameter 'value' is not a hexadecimal string`);\n    }\n    // Ensure the hex string starts with '0x'.\n    const formattedHexString = value.startsWith(\"0x\") ? value : `0x${value}`;\n    return BigInt(formattedHexString);\n}\n/**\n * Converts a buffer of bytes to a bigint using big-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction beBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint using little-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents in little-endian.\n */\nfunction leBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).reverse().toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint. Alias for beBufferToBigInt.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction bufferToBigInt(value) {\n    return beBufferToBigInt(value);\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses big-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint.\n */\nfunction beBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\");\n    fromHex.copy(buffer, size - fromHex.length);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses little-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint in little-endian.\n */\nfunction leBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\").reverse();\n    fromHex.copy(buffer, 0);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer. Alias for beBigIntToBuffer.\n * @param value The bigint to convert.\n * @returns The buffer representation of the bigint.\n */\nfunction bigIntToBuffer(value) {\n    return beBigIntToBuffer(value);\n}\n/**\n * Converts a BigNumberish type to a bigint. If the input is already a bigint,\n * the return value will be the bigint itself, otherwise it will be converted\n * to a bigint using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The bigint representation of the BigNumberish value.\n */\nfunction bigNumberishToBigInt(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return bufferToBigInt(value);\n    }\n    return BigInt(value);\n}\n/**\n * Converts a BigNumberish type to a buffer. If the input is already a buffer,\n * the return value will be the buffer itself, otherwise it will be converted\n * to a buffer using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The buffer representation of the BigNumberish value.\n */\nfunction bigNumberishToBuffer(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return Buffer.from(value);\n    }\n    return bigIntToBuffer(bigNumberishToBigInt(value));\n}\n/**\n * Converts an hexadecimal string to a buffer. The hexadecimal string\n * should not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The hexadecimal string to convert.\n * @returns The buffer representation of the hexadecimal string.\n */\nfunction hexadecimalToBuffer(value) {\n    requireHexadecimal(value, \"value\", false);\n    // Ensure even length before converting to buffer.\n    if (value.length % 2 !== 0) {\n        value = `0${value}`;\n    }\n    return Buffer.from(value, \"hex\");\n}\n/**\n * Converts a buffer to a hexadecimal string. It accepts 'Buffer' or 'Uint8Array'.\n * The hexadecimal string will not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The buffer to convert.\n * @returns The converted hexadecimal string.\n */\nfunction bufferToHexadecimal(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"hex\");\n}\n/**\n * Converts bytes to a base64 string. It accepts 'Buffer' or 'Uint8Array'.\n * @param value The bytes to convert.\n * @returns The converted base64 string.\n */\nfunction bufferToBase64(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Converts a base64 string to bytes (i.e. a buffer). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they will be ignored.\n * @param value The base64 string to convert.\n * @returns The converted buffer.\n */\nfunction base64ToBuffer(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Converts text (utf8) to a base64 string.\n * @param value The text to convert.\n * @returns The converted base64 string.\n */\nfunction textToBase64(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"utf8\").toString(\"base64\");\n}\n/**\n * Converts a base64 string to text (utf8). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they could be ignored and the result may be unexpected.\n * @param value The base64 string to convert.\n * @returns The converted text.\n */\nfunction base64ToText(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\").toString(\"utf8\");\n}\n\nvar conversions = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    base64ToBuffer: base64ToBuffer,\n    base64ToText: base64ToText,\n    beBigIntToBuffer: beBigIntToBuffer,\n    beBufferToBigInt: beBufferToBigInt,\n    bigIntToBuffer: bigIntToBuffer,\n    bigIntToHexadecimal: bigIntToHexadecimal,\n    bigNumberishToBigInt: bigNumberishToBigInt,\n    bigNumberishToBuffer: bigNumberishToBuffer,\n    bufferToBase64: bufferToBase64,\n    bufferToBigInt: bufferToBigInt,\n    bufferToHexadecimal: bufferToHexadecimal,\n    hexadecimalToBigInt: hexadecimalToBigInt,\n    hexadecimalToBuffer: hexadecimalToBuffer,\n    leBigIntToBuffer: leBigIntToBuffer,\n    leBufferToBigInt: leBufferToBigInt,\n    textToBase64: textToBase64\n});\n\n/**\n * Generates a secure random sequence of bytes using the Web Cryptography API.\n * @param size The number of bytes to generate.\n * @returns A Uint8Array containing the generated random bytes.\n */\n/* eslint-disable import/prefer-default-export */\nfunction getRandomValues(size) {\n    if (size <= 0)\n        throw Error(`size ${size} is too small, need at least 1`);\n    return crypto.getRandomValues(new Uint8Array(size));\n}\n\nvar crypto_browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getRandomValues: getRandomValues\n});\n\n/**\n * @module Scalar\n * This module provides utility functions for performing scalar operations\n * within a field, especially designed to handle operations on bigints.\n * The operations include scalar inversion (`inv`), scalar exponentiation (`pow`),\n * and modular reduction. Functions are carefully implemented to ensure\n * mathematical correctness and efficiency, supporting both positive and\n * negative bigint values. The module aims to provide robust tools for\n * cryptographic calculations and other applications requiring high-precision\n * arithmetic in fields.\n */\n/**\n * Checks if a bigint scalar value is zero.\n * @param a The bigint scalar value to check.\n * @returns True if 'a' is zero, false otherwise.\n */\nfunction isZero(a) {\n    return !a;\n}\n/**\n * Determines whether a bigint scalar value is odd.\n * @param a The bigint scalar value to check.\n * @returns True if 'a' is odd, false if it is even.\n */\nfunction isOdd(a) {\n    return (a & BigInt(1)) === BigInt(1);\n}\n/**\n * Performs a bitwise right shift on a bigint scalar value.\n * This operation is equivalent to dividing by 2^n, but it operates directly\n * on the binary representation, making it efficient for certain types of calculations.\n * @param a The bigint scalar value to shift.\n * @param n The number of bits to shift 'a' by.\n * @returns The result of shifting 'a' right by 'n' bits.\n */\nfunction shiftRight(a, n) {\n    return a >> n;\n}\n/**\n * Multiplies two bigint scalar values.\n * @param a The first bigint scalar value.\n * @param b The second bigint scalar value.\n * @returns The product of 'a' and 'b'.\n */\nfunction mul(a, b) {\n    return a * b;\n}\n/**\n * Compares two bigint scalar values to determine if the first is greater than the second.\n * @param a The first bigint scalar value to compare.\n * @param b The second bigint scalar value to compare.\n * @returns True if 'a' is greater than 'b', false otherwise.\n */\nfunction gt(a, b) {\n    return a > b;\n}\n/**\n * Converts a bigint scalar value into an array of bits, represented as numbers.\n * This function is particularly useful for examining the binary structure of bigints,\n * which can be necessary for bit manipulation and understanding the representation\n * of numbers at a lower level.\n * @param n The bigint scalar value to convert into bits.\n * @returns An array of numbers representing the bits of 'n', starting from the least significant bit.\n */\nfunction bits(n) {\n    const res = [];\n    let E = n;\n    while (E) {\n        if (E & BigInt(1)) {\n            res.push(1);\n        }\n        else {\n            res.push(0);\n        }\n        E >>= BigInt(1);\n    }\n    return res;\n}\n\nvar scalar = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    bits: bits,\n    gt: gt,\n    isOdd: isOdd,\n    isZero: isZero,\n    mul: mul,\n    shiftRight: shiftRight\n});\n\n/**\n * @class F1Field\n * Represents a finite field of order 'order' providing arithmetic operations under modulus.\n * This class includes operations such as addition, subtraction, multiplication, division,\n * and inversion, all performed modulo the field's order. It's designed to work with bigints,\n * supporting large numbers for cryptographic purposes and other applications requiring\n * modular arithmetic.\n * Note that the outputs of the functions will always be within the field if and only if\n * the input values are within the field. Devs need to make sure of that.\n *\n * @property one Represents the scalar value 1 in the field.\n * @property zero Represents the scalar value 0 in the field.\n * @property _order The order of the finite field (i.e., the modulus).\n * @property _half Half the order of the field, used for certain comparisons.\n * @property _negone The scalar value -1 in the field, represented positively.\n */\nclass F1Field {\n    constructor(order) {\n        this.one = 1n;\n        this.zero = 0n;\n        this._order = order;\n        this._half = order >> this.one;\n        this._negone = this._order - this.one;\n    }\n    /**\n     * Ensures a given result falls within the field by applying modular reduction.\n     * This method also handles negative inputs, correctly mapping them into the field.\n     * @param res The result to be normalized to the field.\n     * @returns The equivalent value within the field.\n     */\n    e(res) {\n        res %= this._order;\n        return res < 0 ? res + this._order : res;\n    }\n    /**\n     * Performs modular multiplication of two bigint values within the field.\n     * @param a The first value.\n     * @param b The second value.\n     * @returns The product of 'a' and 'b' modulo the field's order.\n     */\n    mul(a, b) {\n        return (a * b) % this._order;\n    }\n    /**\n     * Subtracts one bigint from another under modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value from which to subtract.\n     * @param b The value to be subtracted.\n     * @returns The difference of 'a' and 'b' modulo the field's order.\n     */\n    sub(a, b) {\n        return a >= b ? a - b : this._order - b + a;\n    }\n    /**\n     * Adds two bigint values together under modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value.\n     * @param b The second value.\n     * @returns The sum of 'a' and 'b' modulo the field's order.\n     */\n    add(a, b) {\n        const res = a + b;\n        return res >= this._order ? res - this._order : res;\n    }\n    /**\n     * Computes the multiplicative inverse of a given value within the field.\n     * This method uses the Extended Euclidean Algorithm to find the inverse,\n     * ensuring the result is always a positive value less than the field's order.\n     * If the input value is zero, which has no inverse, an error is thrown.\n     * @param a The value for which to compute the inverse.\n     * @returns The multiplicative inverse of 'a' modulo the field's order.\n     * @throws if 'a' is zero.\n     */\n    inv(a) {\n        if (a === this.zero) {\n            throw new Error(\"Zero has no inverse\");\n        }\n        let t = this.zero;\n        let r = this._order;\n        let newt = this.one;\n        let newr = a % this._order;\n        while (newr) {\n            const q = r / newr;\n            [t, newt] = [newt, t - q * newt];\n            [r, newr] = [newr, r - q * newr];\n        }\n        if (t < this.zero) {\n            t += this._order;\n        }\n        return t;\n    }\n    /**\n     * Divides one bigint by another within the field by multiplying the first value\n     * by the multiplicative inverse of the second.\n     * @param a The dividend.\n     * @param b The divisor.\n     * @returns The result of the division of 'a' by 'b' modulo the field's order.\n     */\n    div(a, b) {\n        return this.mul(a, this.inv(b));\n    }\n    /**\n     * Checks if two bigint values are equal within the context of the field.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' equals 'b', false otherwise.\n     */\n    eq(a, b) {\n        return a === b;\n    }\n    /**\n     * Squares a bigint value within the field.\n     * This is a specific case of multiplication where the value is multiplied by itself,\n     * optimized for performance where applicable.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value to square.\n     * @returns The square of 'a' modulo the field's order.\n     */\n    square(a) {\n        return (a * a) % this._order;\n    }\n    /**\n     * Compares two bigint values to determine if the first is less than the second,\n     * taking into account the field's order for modular comparison.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' is less than 'b', false otherwise.\n     */\n    lt(a, b) {\n        const aa = a > this._half ? a - this._order : a;\n        const bb = b > this._half ? b - this._order : b;\n        return aa < bb;\n    }\n    /**\n     * Compares two bigint values to determine if the first is greater than or equal to the second,\n     * considering the field's modular context.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The first value to compare.\n     * @param b The second value to compare.\n     * @returns True if 'a' is greater than or equal to 'b', false otherwise.\n     */\n    geq(a, b) {\n        const aa = a > this._half ? a - this._order : a;\n        const bb = b > this._half ? b - this._order : b;\n        return aa >= bb;\n    }\n    /**\n     * Computes the negation of a bigint value within the field.\n     * The result is the modular additive inverse that, when added to the original value,\n     * yields zero in the field's modulus.\n     * It ensures the result is within the field if and only if the input values are within the field.\n     * @param a The value to negate.\n     * @returns The negation of 'a' modulo the field's order.\n     */\n    neg(a) {\n        return a ? this._order - a : a;\n    }\n    /**\n     * Checks if a bigint value is zero within the context of the field.\n     * @param a The value to check.\n     * @returns True if 'a' is zero, false otherwise.\n     */\n    isZero(a) {\n        return a === this.zero;\n    }\n    /**\n     * Raises a base to an exponent within the field, efficiently computing\n     * scalar exponentiation using the square-and-multiply algorithm.\n     * Supports both positive and negative exponents through the use of the `inv` method for negatives.\n     * @param base The base to be exponentiated.\n     * @param e The exponent.\n     * @returns The result of raising 'base' to the power 'e' modulo the field's order.\n     */\n    pow(base, e) {\n        if (isZero(e)) {\n            return this.one;\n        }\n        if (e < 0n) {\n            base = this.inv(base);\n            e = -e;\n        }\n        const n = bits(e);\n        if (n.length === 0) {\n            return this.one;\n        }\n        let res = base;\n        for (let i = n.length - 2; i >= 0; i -= 1) {\n            res = this.square(res);\n            if (n[i]) {\n                res = this.mul(res, base);\n            }\n        }\n        return res;\n    }\n}\n\n/**\n * @module ProofPacking\n *\n * This module provides utility functions to pack and unpack\n * various types of objects, making it easier to export or use\n * them externally.\n */\n/**\n * Packs a Snarkjs Groth16 proof into a single list usable as calldata in Solidity (public signals are not included).\n * @param proof The Groth16 proof generated with SnarkJS.\n * @returns Solidity calldata.\n */\nfunction packGroth16Proof(proof) {\n    return [\n        proof.pi_a[0],\n        proof.pi_a[1],\n        proof.pi_b[0][1],\n        proof.pi_b[0][0],\n        proof.pi_b[1][1],\n        proof.pi_b[1][0],\n        proof.pi_c[0],\n        proof.pi_c[1]\n    ];\n}\n/**\n * Unpacks a PackedGroth16Proof Solidity calldata into its original form which is a SnarkJS Groth16 proof.\n * @param proof Solidity calldata.\n * @returns The Groth16 proof compatible with SnarkJS.\n */\nfunction unpackGroth16Proof(proof) {\n    return {\n        pi_a: [proof[0], proof[1]],\n        pi_b: [\n            [proof[3], proof[2]],\n            [proof[5], proof[4]]\n        ],\n        pi_c: [proof[6], proof[7]],\n        protocol: \"groth16\",\n        curve: \"bn128\"\n    };\n}\n\nvar proofPacking = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    packGroth16Proof: packGroth16Proof,\n    unpackGroth16Proof: unpackGroth16Proof\n});\n\nexport { F1Field, base64ToBuffer, base64ToText, beBigIntToBuffer, beBufferToBigInt, bigIntToBuffer, bigIntToHexadecimal, bigNumberishToBigInt, bigNumberishToBuffer, bufferToBase64, bufferToBigInt, bufferToHexadecimal, conversions, crypto_browser as crypto, errorHandlers, hexadecimalToBigInt, hexadecimalToBuffer, isArray, isBigInt, isBigNumber, isBigNumberish, isBuffer, isDefined, isFunction, isHexadecimal, isNumber, isObject, isString, isStringifiedBigInt, isSupportedType, isType, isUint8Array, leBigIntToBuffer, leBufferToBigInt, packGroth16Proof, proofPacking as packing, requireArray, requireBigInt, requireBigNumber, requireBigNumberish, requireBuffer, requireDefined, requireFunction, requireHexadecimal, requireNumber, requireObject, requireString, requireStringifiedBigInt, requireTypes, requireUint8Array, scalar, supportedTypes, textToBase64, typeChecks, unpackGroth16Proof };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4330, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/poseidon/index.js"],"sourcesContent":["\"use strict\";\n\nconst F = BigInt('21888242871839275222246405745257275088548364400416034343698204186575808495617');\n\n// Parameters are generated by a reference script https://extgit.iaik.tugraz.at/krypto/hadeshash/-/blob/master/code/generate_parameters_grain.sage\n// Used like so: sage generate_parameters_grain.sage 1 0 254 2 8 56 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n\n// Using recommended parameters from whitepaper https://eprint.iacr.org/2019/458.pdf (table 2, table 8)\n// Generated by https://extgit.iaik.tugraz.at/krypto/hadeshash/-/blob/master/code/calc_round_numbers.py\n// And rounded up to nearest integer that divides by t\nconst N_ROUNDS_F = 8;\nconst N_ROUNDS_P = [56, 57, 56, 60, 60, 63, 64, 63, 60, 66, 60, 65, 70, 60, 64, 68];\nconst pow5 = v => {\n  let o = v * v;\n  return v * o * o % F;\n};\nfunction mix(state, M) {\n  const out = [];\n  for (let x = 0; x < state.length; x++) {\n    let o = 0n;\n    for (let y = 0; y < state.length; y++) {\n      o = o + M[x][y] * state[y];\n    }\n    out.push(o % F);\n  }\n  return out;\n}\nfunction poseidon(_inputs, opt, nOuts = 1) {\n  const inputs = _inputs.map(i => BigInt(i));\n  if (inputs.length <= 0) {\n    throw new Error('poseidon-lite: Not enough inputs');\n  }\n  if (inputs.length > N_ROUNDS_P.length) {\n    throw new Error('poseidon-lite: Too many inputs');\n  }\n  const t = inputs.length + 1;\n  const nRoundsF = N_ROUNDS_F;\n  const nRoundsP = N_ROUNDS_P[t - 2];\n  const {\n    C,\n    M\n  } = opt;\n  if (M.length !== t) {\n    throw new Error(`poseidon-lite: Incorrect M length, expected ${t} got ${M.length}`);\n  }\n  let state = [0n, ...inputs];\n  for (let x = 0; x < nRoundsF + nRoundsP; x++) {\n    for (let y = 0; y < state.length; y++) {\n      state[y] = state[y] + C[x * t + y];\n      if (x < nRoundsF / 2 || x >= nRoundsF / 2 + nRoundsP) state[y] = pow5(state[y]);else if (y === 0) state[y] = pow5(state[y]);\n    }\n    state = mix(state, M);\n  }\n  if (typeof nOuts !== 'number') throw new Error(`poseidon-lite: expected nOuts to be number got ${typeof nOuts}`);\n  if (nOuts === 1) {\n    return state[0];\n  } else if (nOuts <= state.length) {\n    return state.slice(0, nOuts);\n  } else {\n    throw new Error(`poseidon-lite: Invalid number of outputs requested ${nOuts}, max ${state.length}`);\n  }\n}\nmodule.exports = poseidon;"],"names":[],"mappings":"AAEA,MAAM,IAAI,OAAO;AAEjB,kJAAkJ;AAClJ,sIAAsI;AAEtI,uGAAuG;AACvG,uGAAuG;AACvG,sDAAsD;AACtD,MAAM,aAAa;AACnB,MAAM,aAAa;IAAC;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;CAAG;AACnF,MAAM,OAAO,CAAA;IACX,IAAI,IAAI,IAAI;IACZ,OAAO,IAAI,IAAI,IAAI;AACrB;AACA,SAAS,IAAI,KAAK,EAAE,CAAC;IACnB,MAAM,MAAM,EAAE;IACd,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,IAAI,IAAI,EAAE;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;QAC5B;QACA,IAAI,IAAI,CAAC,IAAI;IACf;IACA,OAAO;AACT;AACA,SAAS,SAAS,OAAO,EAAE,GAAG;QAAE,QAAA,iEAAQ;IACtC,MAAM,SAAS,QAAQ,GAAG,CAAC,CAAA,IAAK,OAAO;IACvC,IAAI,OAAO,MAAM,IAAI,GAAG;QACtB,MAAM,IAAI,MAAM;IAClB;IACA,IAAI,OAAO,MAAM,GAAG,WAAW,MAAM,EAAE;QACrC,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,IAAI,OAAO,MAAM,GAAG;IAC1B,MAAM,WAAW;IACjB,MAAM,WAAW,UAAU,CAAC,IAAI,EAAE;IAClC,MAAM,EACJ,CAAC,EACD,CAAC,EACF,GAAG;IACJ,IAAI,EAAE,MAAM,KAAK,GAAG;QAClB,MAAM,IAAI,MAAM,AAAC,+CAAuD,OAAT,GAAE,SAAgB,OAAT,EAAE,MAAM;IAClF;IACA,IAAI,QAAQ;AAAC,QAAA,EAAE;WAAK;KAAO;IAC3B,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,UAAU,IAAK;QAC5C,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;YAClC,IAAI,IAAI,WAAW,KAAK,KAAK,WAAW,IAAI,UAAU,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;iBAAO,IAAI,MAAM,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,CAAC,EAAE;QAC5H;QACA,QAAQ,IAAI,OAAO;IACrB;IACA,IAAI,OAAO,UAAU,UAAU,MAAM,IAAI,MAAM,AAAC,kDAA8D,OAAb,OAAO;IACxG,IAAI,UAAU,GAAG;QACf,OAAO,KAAK,CAAC,EAAE;IACjB,OAAO,IAAI,SAAS,MAAM,MAAM,EAAE;QAChC,OAAO,MAAM,KAAK,CAAC,GAAG;IACxB,OAAO;QACL,MAAM,IAAI,MAAM,AAAC,sDAAmE,OAAd,OAAM,UAAqB,OAAb,MAAM,MAAM;IAClG;AACF;AACA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4412, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/poseidon/unstringify.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unstringifyBigInts;\nfunction unstringifyBigInts(o) {\n  if (Array.isArray(o)) {\n    return o.map(unstringifyBigInts);\n  } else if (typeof o == 'object') {\n    const res = {};\n    for (const [key, val] of Object.entries(o)) {\n      res[key] = unstringifyBigInts(val);\n    }\n    return res;\n  }\n  // base64 decode\n  const byteArray = Uint8Array.from(atob(o), c => c.charCodeAt(0));\n  const hex = [...byteArray].map(x => x.toString(16).padStart(2, '0')).join('');\n  return BigInt(`0x${hex}`);\n}"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,OAAO,GAAG;AAClB,SAAS,mBAAmB,CAAC;IAC3B,IAAI,MAAM,OAAO,CAAC,IAAI;QACpB,OAAO,EAAE,GAAG,CAAC;IACf,OAAO,IAAI,OAAO,KAAK,UAAU;QAC/B,MAAM,MAAM,CAAC;QACb,KAAK,MAAM,CAAC,KAAK,IAAI,IAAI,OAAO,OAAO,CAAC,GAAI;YAC1C,GAAG,CAAC,IAAI,GAAG,mBAAmB;QAChC;QACA,OAAO;IACT;IACA,gBAAgB;IAChB,MAAM,YAAY,WAAW,IAAI,CAAC,KAAK,IAAI,CAAA,IAAK,EAAE,UAAU,CAAC;IAC7D,MAAM,MAAM;WAAI;KAAU,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC;IAC1E,OAAO,OAAO,AAAC,KAAQ,OAAJ;AACrB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4437, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/constants/5.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  C: ['FEhhRZjgD5jnrn3qRfvYO9loZT74OQzeLoa3Bq1AxlE=', 'CreykTiOXJ5DwNwfWR+4Ps22UCLhtwr0O4p7QMHf98M=', 'K3y7IXiW9SyajAiOZUryHoTN51SjzvWxXE1UZmEtat8=', 'K8aw3b4dcBtlcEKL3Byhvw2ln/O7u5X8K8ccDG5nplw=', 'EjpVoxmAOE89ILLOy8RO1gw4wR99IOknHvq5qQXu/Tw=', 'A3UBzIydyBkwmnafTfCY5YiwGFi8jrfieeKIO+n7jFM=', 'HCEW5H4DqGuxFpWwpfbatrmkYLHrlRqwHCWeyj/UfVE=', 'LBghNIkDLoWpyMuOmmWDm/rtE+V7wPrknb2uv1T1b5M=', 'Luj+09TSxxoEKer9jl2xcY8p4iJ5hf3yrYcDyDW54DE=', 'KMZNj17XqsAEySAp2em/kbqUNtHM6UuTFtERxwoMFxQ=', 'GKAdn/t0euDePoPHB/iyT2gshPFav1cbNCVKA0eGZeA=', 'HCHZK+8ZfnOyNOR3e2DbFOZCpWzucVFdVOGscc3nK9M=', 'CtQEzLyx4ZWJfLYMgJgeu51mpmd9u+2ti2RV/mLYB7E=', 'Cptt6DMGT5O2rbma9sAFlFy2VMt70UyLl6+LYMwfs4c=', 'ExKeP5MK7W1HaQMx/wncUWDvpY3c4sPmGA1FvsOqOm8=', 'DXphTImRUIqxzkiVgTuxyC8Yv3v8nigMzKGAeYOTh/E=', 'BTL37DbjAEGwSGmGh1yROkm93y9a9f6+jDHy9AlP/qU=', 'BrvLjo4YAgEpPnEvSVDxsLvugIydZCY8hNnYrhVcuJI=', 'D1WKTbGjrAf2Hi5r7pR/c1hr9A8hHOtPaHylZ4qdyzM=', 'K+FApgtbXy+O3XioGKlpsgxkPkGbzwtXfCSg0Oes/pg=', 'HEnEuanwn3ua1fdOusxxBRK46Ge6zifLDeoG6JuW9jE=', 'FwwacychsSzefzPkdqOaGqd6gcBuLqxQOEewDVl2Uts=', 'GcJ9DlL2XKNPTjGgaOSTMca/w52SQfnUwwIEFhXPJ/E=', 'LxvcUlT5Igwacx/FJ2lk2rJrOF+kC2sEvtmWDiVDugg=', 'BbQtL7zL9NOdK+kznKvp0Nxtkh6FXNkRVLY50o1KHPA=', 'EiAEBxWkGtWfT0EODAWkLF/TKsUv6dBviBiNcfYeCTU=', 'JflSZSYVW4OUZgn3u5UH3Ukl74cd7pFtkUTrtOzhNDw=', 'AXv+QoQpmud0C20OIElR4xSopdBFJBkUeXipWzR0JEQ=', 'Kl1HZAIcpx14qWdMtnCPFYjSzq81eMQRHPizWe7wic8=', 'F/Atq3RfvjwIEyH+XO+EXnuNBwslFNKbKnt9icwIFdo=', 'GdpiYm23GZtl9K3PV/pKPbqhdkp70VVwjubzeMie8BM=', 'D4jilfou2BtCbJH6aTZqc+33Xzm/GGNM0mbsQDiCngU=', 'H+McVUhUbHlI/k7hvXQS4ygO/30gywmqhfSfJ2YUgBc=', 'EP3BYTvb9n84vd5WGy+R5MxItZ+Y1kNjj9wK+tv+Em4=', 'HyYYwuvpV0UIucUvAADjPr/drRoD/da8pu9/AJMSe+8=', 'Ep/n/D76xqirI9um2IbzlNoR9ZU8+Y4oJpoNuip0XdM=', 'Fa/UzfHk+CDBYx1KuFykujuvz+5yvq3p+uYFIxAkSOM=', 'Hyx0ulw2fjcNco5x4VsmiFGnu4tFUoy3NJVgeayZsBI=', 'ETDhhy128vk2nPWble35zhnwH6icnDaybgne9nhtrTw=', 'E1I9Fz9+a623O2P8HJu9vuJCxhvGhlZJMydTOlwbHco=', 'FNpA0K9CemXxhBta3JZThlM2j3JUy1Zn3a27rXpXTNQ=', 'AJH5ZADkKX6oW7GGwXswToJjjlf9Yx/2MVl24aXdi4Y=', 'MDMpv5AxxVFbmjTUmmS7agJnvHtUoN7KXEUCd6ACzcs=', 'FO1H5VwdocLwXTwaGy5sGFCfyDNuz+nbc3kW4oP6ghs=', 'EWHxCzV3ddgQrVO8xKINWt0rAyUcdH3rBO6UxWXljWs=', 'F6ilCucs5wfyK8Bw65koUcqRTrlMxo6vu4qWpxTrgiE=', 'Gmxh15Xbr2L5klCzfsXfiGRaHBU3kdtjErky3CUOT2I=', 'H4vSq4qoQGZMTu4ZjEaE3EsFdyuyoIadpnIrFfRHoTM=', 'H/y4UqTwAnqXmfExzXS5jM+4y8BjSdj+/MYvEMj7Pi8=', 'A150LsUvGbNtSJxyD0Z/+td81TvC213dskayMCH3nxg=', 'Hfqu5BvflNeDqin8Yrfse1VnOqgY0wX9QtF1oF8uPYY=', 'KCE3hHegLplQBaVjUIhUCUW9Mz8tFFXwOKIZuMR5azo=', 'HbSk0PI4pXCxBhxu7IHALzH/3Up8GedjF08jjQSJdCE=', 'FL94iUV7ILehNns0o6U4IX1pO1JCav9ApLtyiTsXhMo=', 'LO1Swr8pb4fldBDD7JqUg6eW0WT2BJEnEJ/w06nAhGU=', 'Hd6sWAWn9K2k0EQe0QjjFJ1M5lhPSa5b39RtZ2buozQ=', 'Lja05enJe0YjBOjitfnciOHJ8hYboEBnP5ERI/BCrnA=', 'DGhA0csGZtxZ6JsYZSddihZLRHxe1kNHyu5jUCwjjV4=', 'E34uPonnHUYfTJvD6PEhgyYqTR21XFibLK6qwBI49Yw=', 'JQky57CtzyyE7Uv7YKNra4LlWqlHURV7HUV5Swgciq0=', 'FwpykvVjTAbdO/CatcnE7NSwDVzi81+XK0VVOR8WtC0=', 'DWjLvnconnjVy/UdcPG3W6IV30570BSdELLFDypPO4E=', 'DK90VjuQUl9kWm0gNuzRMG+h3GgLSdnOTtJMl0mXMXg=', 'IKfRwKJ/zOeP/jcvTFgwaxZvlFbtRs3rJV45W30w1Co=', 'BiPzImtUcLJ4m4pTBA5ERDOF6Wuc+gvk01AVFYpGhGU=', 'FjIwhojCXnkPV9aKU1AkEkKlYwU0feSlAJzka4zcuR8=', 'LeR5Om+ZzRTj9mQiEfTQt7z6NhWXxUT/y1pWfpB29H8=', 'HU0G0Z6hsJyteQhtUb3hFyWlVPqZVZyi8J87tz1yjGY=', 'BIDnR5pmp82ephyLKJdDiZCDUKvEqvwYzXXjPdEwwUQ=', 'MEMLAzaOvKqRJGlgSQvPkX14aBRj4ufXRL+0QzXawk0=', 'C1ezcyASfUxQ8mkSSw29yysfE1IkGl0SEDKD4InAx0I=', 'LPSJBlDSckDhlfYKT2mO2iSbjdYUsjN2tQF40t9tK48=', 'HiIcVSaJi/0S3oaFGg2XA3UaLyOQCKtfm307aRHGQYQ=', 'KOB0ha19mS7RpY8ynKEq3OTsaT6927KVLlTTOfLuvaU=', 'L0TWT4TeFtxnvV6tUe+x3IOByEUgwShU3V7zoHms1OA=', 'BQp2vDLr0d/ivjMPME7ces5xZ6t7oVFvQCHGLPDU+sI=', 'L1jEXl1lmmfXgTZyQfbDXYy0Y2HZeyiUfSlCHCcFlKk=', 'JejamuDkLoQOBLIwNw54K9tnU0hEMlujb8fl4WDGanQ=', 'L+xzTaIP4yAD6gTxJ/hEck84o2i6EMKVRCUr55YED38=', 'KIpnePOoOYio7Rcn8V6TtMsU9OOju7kd1tH6yv/9Xu8=', 'INzGx1/Yklm+f0BnULPbZ5olqM0nFdJFuRdTkKySLIQ=', 'F/QroQlC3yXLilQXgqGLb9Mc+WXREXjHsErEW03qXdM=', 'Ao7rhdEVqQQCDgxhSO7GYD6c7avGZKvudkqv1FWYa6U=', 'Cx187POnmyrT+imPbOp66V2AwCmezJGOn4ycPTjVnUA=', 'BEAznJdkzsecFu/bg0omJh244/Es4c9yLSPA4R/0zwc=', 'BspkfClyfBlioAIXfaLVBPSwel9+tXx5uI5reru9rVw=', 'LqEgqGT1xAk90ali6PATx7jvd4sE0rpb/DyrKGGbqeM=', 'K7c3VGxK7nwMwrqHwRV+KnfEeev7Xcdq27Oc+Gl2M/0=', 'DjDaZJBiXTPnnNUBdvVo+aLCjC9EmivVGiXRVoaAOpM=', 'DffKcnihNlC5GdhUl7LrsPcQNafCBDDUEx2QOrf1dSE=', 'J8xYn1v1hXlKus5Yn7inSi94TAmQuA/KppRAl/hw4tU=', 'IlXDajjIc13kXO30Uq+oQjMtMwQveOYMQ8dFVCGzJb8=', 'Ez2WAr0zeNafaBwnsFvf/Ji32GzKY9c6YMrtSFeE0Ic=', 'DhVI6UKunT4mhgaZuTcnyBeplIYWyT70rM2YGx3D14o=', 'DyDw5V2TaJ/gnsMS9q9HYnSC5L3goWAqjiyNboTopq4=', 'LlIyhIPLW3/y605FsS5RsmIyybwXtykpVMCp9r+lG7k=', 'ArIWLVM+BZpu2iq7dHEu2zp4YL7qld2KSr/JV2YIBPQ=', 'GeCSdxXRzG04lCmUf7Nzfa1zOXTGsuE+Wz1DJRlRbHQ=', 'DTqABFfXd4VjYwO4uU8X3P/LRgSIcqyfdO9/J+5XNwU=', 'LJdNGVJVehqsX3uuSZZhbaYZtz9EHE5QTcj+nPtVnjI=', 'B2a/7u3izPNwjhtP8wcUwiwdQ0zb6PVVFLq8LdXZe+8=', 'I9rI6lQIL8Ex4XOuVeRjDNTKfIcbKgpHnB505/GR5iw=', 'F9X7bCyzcBDj41irLVdTdocO0zGGuOrkmtO0fjQKjX8=', 'F13Kx22KgSYTm1g644hTKQJG5D54P6aQPsgAfxeMACM=', 'DE/Qj+3l0iGtt6v1SYmMkeW+foW/H9KmEb8YLMLnFlU=', 'J3k0uQnnLTo0dbsex2arejitWbEoMD/FAC8Cplvf5yk=', 'Dog0mZjf5wPxsYRST5w5TWAEzKz5y5UolujP2wsHi2g=', 'HxsgeLYLD84Hgk4qK8jK6O5nNRSwBwqLRXEMx4y7mUI=', 'LrFVlWbFNt28MW9kgtUfo0BVdldwD1uKhG6BKg7TNNE=', 'HE29wzXPZ2Q1Ugi0ydJD00VB1iPGad7Cw7oGa76vZ3M=', 'I3SmstpvjKuOXP6NgF3Tot/KHot+ul3IV0Ah/RJB47Q=', 'Gd00JTPMxgOplzjj+1pWm5TvcbPkn5D7h09hYXMwcvQ=', 'IX1m22x/s+/6UIgAWH0us8bQPYOFEy8vzOfzXycFzM8=', 'CBX7hZH+AQOM06OziyNvnvynfGGNO/xsKn+okpbH5k8=', 'K7lDtAwr1FamwXhTscqI6w/zb1l0sv+aX1CT6b9joW8=', 'EaUVP85llRPufLmXSubLpYHjtM0UVwxXCf7D2NP8guk=', 'G3K/0HY12FAbLv+HhaJJW650x2U8+Q5tXJ8URCaDbfQ=', 'FJAsBwDuyJeuF4uoyvhQ15Px2HUSvqDs6jnPax/uIz0=', 'CcE4xuCmFqSf+Q1DprBD87dFt4hlhW3EwaReL9hMs/Q=', 'BbWKPc5XsoGicdaYlQUtiHRYpxV4PoMX4CSmGjXsELw=', 'K+jSlSXAz91eazEl473jv1WOVfvoZ/AkRXqWdlR00Dc=', 'Bh1y948bqdxrTX93hCJdaoG9/Bta1sJDafnAVgUj2a0=', 'C/GK78rP+r30ES7drcphRXOLSAOzYUW7lRbbUBoGkuk=', 'LnPdEF+osuyTHYzfKexnnjqYAakwcafV6jBlklXwO8Y=', 'D4RA72Z8mugTN7pdjJJ6U0fecpaGCyEcrR7L+101mO8=', 'AE0wOy3qYnsnMb6D+TrDTn0U0XihOABVjKc5Y5XrEY8=', 'I0VBrXIECnDaKZajUmkjDJRpnu8xOk1IBQgAjLw9N8E=', 'DRI/HnLSa5K92P1z0UKGwxKtTCOstGsuCMFXEEQJ4XQ=', 'L7Ngd28N551wmO56pBI8Be5rBai+Rgp3TzoEjhOFRbs=', 'A2hcB5Q04WcnbFfTzHlwO339xBwVbqHot/mbaValUyY=', 'Jgrw4P/8yXcsFjGxeTRFZrR6qto2geuQNMb3XDcFwcc=', 'KGK0E3T4m2lSdLM7dz8lVJFuK/+f9nJUX8L0lWP2J2c=', 'AqmRL+FwMQInGJ6h5pHQNi8Ys4tACw7/GSyllRPrqNU=', 'COUTreaUoNisHz6/GpZEDTLHE9UFjhIk4HA0jCgfSm8=', 'FApKQx4u55QA7XRll42EdzITxigmT/gPIax6a2c9Cas=', 'KWr00BnLXffZWbKdVJw/BxICtOuotT3F7pee0UM3eSc=', 'AYMuKEp/TIFhSIK2k5/A8YVXO9ICPj5QV2VHC7gSs0k=', 'GoTVame/3T2WWr3NMpqnjU/pNDRJby0QOGH9GdZtcmA=', 'BAy4KEd3OSfSrv3AdIkDep0fdjHsp1yfsN2gy5294UM=', 'AQ3PCEzCnLfK7PJqpjO85O0rAZ8oh87nsaePidP6vi8=', 'B+3CKgkR6iFEJe9UK3dtsjsP5YF4ENQMcsqYqr2a+oM=', 'LupKsIrsd18hSEeeo2+7lpNtpYuki9HS06zUgXOqq+c=', 'HkDA6CV/5KYQBc3PrRSM9/R9G1z936oIJzhpVRgkXxk=', 'I6J4CVg70epR9DbeVEPhCPadRM31HcHwPiGUi0mAuHY=', 'LkZSsETb/kDmO2sjL81fPzmr+9IFHuaK3HVAgNSSUKk=', 'Eeer227Lr8Ln2M3v6ce5xQR160dds8LK9/fWf0hXdfI=', 'GZ1SNQzDDoxzgh+AIJbw5UehNVGye/a4mTlvY6xc+Oc=', 'D1ddbuZ8vs2YNFYk4DKjfIWafL7zCz/dyUnNCXhIQQE=', 'HEtvmiritBjmJlrLqclrBhhNBwKOX7eE80da53cv8Fc=', 'Lctc+Ilt458ijhV8DFWT9GJvubwiUgY4PbIDYKvwySU=', 'E0CrufThExhr3CbL30vMpQtTGhB/hjylRFdePPhw+OE=', 'I2jmkrcnh8uIcOqIjnFOAG9Z0rRGDPt0xIqMxzsdGls=', 'H6ua3ZuqSk9W8jFld1xvLZIqdjKpT5Y3S33IUnVvVLY=', 'DH97gjANPGzj+JV7oeSt1UxMAV4g2XZdIgVxwWq4aA8=', 'FdY+hr6s2Txgg2iOXZyPPGlHkp+fH5mrV4pMOpIu/wM=', 'C+hDrl+bB+UlcheK99ro7QXTaxLAYHhikpNV6nQCPZ4=', 'EzJ0nFI2lMtpNeCWOgfoGwWWfOHZUMC3MQWOySp6DJo=', 'JUOUCIEOB0wL3UWYuYFf7okruVylECns8Am/+lubloI=', 'BX6NGd2ZmpGNopsJQLODup/RXbCw9kmW3/Z/61X5p0I=', 'HgFON+mxF887SHDZmfK1XTU00Ka+mOnjV/pD8B5wop0=', 'Gk7STm4DrrzWvbEAUz3JZll6/hXIUbS4Y/boiQhMZHk=', 'JTQgAHCD8aqGOtR2CQXBA57UERyfBT8ncQRS+DzjapA=', 'InahRBlxcJr/5tKpkyAAHsRexyFVxXXd7srA4ydZqwY=', 'KJV90SGOp5n9NBHrGTJYU633rorhKB91MwL+fTHfp7A=', 'L9klcmq3lMiL11eWqj5/HmaS8pFM+AImfd8B43kCoAg=', 'HPilycdqhLFHyCONklPNVbR8DEPYKWbEY2ooZ0cF/Zo=', 'A3PLvDBuG6uecHc2hxXmIwtLLi5KHbnGdLjDWaQekQg=', 'BgKD0v5/I9/1E9kRCz3GJEi8SPUxzgweq1kgvyMpCkA=', 'DatGXW2RB0DzPvbMDq3HG/gRm9/Vo1J9yLv636pAJjw=', 'DLp7y8giSyqOSroXl3IwpobNZCHcDKU0bzRGtiQ5xMM=', 'HkNl2weQycT0RbBlPEZv8h25bDi0B2uovWi8tN6mkR0=', 'G7LbohmamrO8hu9fnef2xcoT1g6rQs7WjemPxkOACo0=', 'CtPBhwxtbvQO661SEjzRopE9nWLoC/usroEuCCAh+co=', 'AbCYyR57DLtcNFiAd8Dd+VMA3fYUk1YwwM46JickUwg=', 'Gf1cDqwU+udZi9TO6jseKZiwwWhJO21yrkG1duVbnD8=', 'DUdJ15zBY/FxEKQEpG/kJ8ZDTz/me357TM+mq5W9fhg=', 'Hrv+gRSkG7gJ4LMzmSQSMuuUCthyjIpRbUCtpEDb/c8=', 'JwTlthM9l2TW0/F9SdgzIj45N/gOufrqu/upuvS0wbg=', 'IWXhyAJzBbGuDjI1cWNeXVQNE9cQw/mjkLaRPxTQNeM=', 'LjSX5NNf2llsBq+mO8Og8uVdTuukrOtg5lCBrWOqi4o=', 'Ax2kNF7s1ttsD3sHx4Fdet0f4FRtc49NeatcV6qEHt8=', 'CJ7OVOR6pckI5D5fCHN8FDaWcIkAasqxyc0Z6sSiCHY=', 'L1PBXire0zxH9VoHBIPmzH84Ifv4qkBnfQVS7Z0Q2Ec=', 'FCqjT0suitDfeiGz45wAyLCqKFcJSAHqr9cr7+0Hf5M=', 'F66k2kx7zw11iLAU64tAl53Scl7aTmrOMxmCRnx/8r8=', 'DpcMGdGXSNjEZRBNjwIgA2P5pBeG8C8YJ3QrINwNFyc=', 'BLytnlU3lWQvWbr3FKa9tDL8RaCgt38aujqYI0dt+bk=', 'JCwL+82qdvcV29S6glxx/P7WccGxkB+khMh/gQMV0M4=', 'JdsTQ8JBBAcQI/tu002ZCQeDEeHv6FrwoRsZEU+p55A=', 'L/5NnEIKWenNx8Masr81GHyhR8uJijlC3rNnd4YDaoA=', 'EluwOvPizxi75vW1kOs7+NDRumO+aWSD6Y8oO8fNB6M=', 'CBa+QnRbfbtM7/5bjiTqYP2LcZ3rpQA3rHt1lIdFxrw=', 'ERFg+az27DYNG2pxIxOg28viPmRCAFVHHS7kxd7bNdQ=', 'E3eXjhsfaokl+o57eUG9+PtZq5VCNCQZKD2CA0Nck5E=', 'De/B2IghZu88zeU6TyNvuoPThGIZN87lfkIaUT0NM5c=', 'L4+lx4xwbjpdSgPyp6OVMEbX6Uy4in7zUOZ7W6Dw3r8=', 'GiqVfsCnI9phwhNLqwvxe+sA5tzYRpDCMNy55Y2pSCc=', 'HN+HEJlfXgNBK0p/aZUy+f0B8OoWeo38Hd834oBa3e8=', 'Jv0xRxgow2rjbCe3SAVLDAxP5SObMBaZ43Ze6+zBiUY=', 'B3XZlswsRFbzA6LB+QB2R+Eakh2f6j97kmFDuZ0voL4=', 'AW+5M3cIymOM39qRvQ2uprlyJO97IGJnKt3RvRi7iQA=', 'LDkvvn0/3kL8pPlHi7Q5MxJYJVNW8YSvb3bxGQVBF9c=', 'GHoqO/eaafo+UInvnx/Vb9tHxV7s53qiKKo94bSGvLE=', 'AnGoY6KAoyZB/6M1ELLt0njJhjA1lTLz5Qaydf1dIM4=', 'FVdFnJx0yUqgDlr2mh4xEvtpU3zol+wMcYlY2WUW8qs=', 'Ko4myo1kfZpjiFFuqdz/iQg9U55YFowqUMba4w8QnyE=', 'Ict1IZTPQ/O1GULrAEDrqd4rz7HCo/rpeSS3EPJoMs0=', 'LCba+Za+JHrNbdSsrWDTi1pHHmMiGI0CwTfny0hDd+w=', 'AkAXbuDnmC7r6Spo0+OjjCaCGswPXQWM+ME3vKLSbxs=', 'JjbglzyGXBvZdN142qqNCoTNr2vhrUfs8qDRjxFzGPI=', 'GehPTyWnmUlgQWYdxdl1toH24GdEzuibe+XZ/eF0SsA=', 'Dr+JBko68kfKHzb281cBiOJx4LMmxPsmZk6J4UVMoRA=', 'Jcfpe0db4A6LVZo4xFI2T0ycUx/suKxpj3/XPOIucew=', 'BETJnlkjU+WuyqMCrdkBwU2MVScKFgr+1EKe9VmK108=', 'E424iHgwVl8mk9Dg8C5OeeFEln8LpTsDUZq6dktcmUo=', 'JNQPRiEU/p7gKq/PdLT8ok4a42XcdcO1K7E8u7LyHt0=', 'IeZdbY7kN2C8pA5zC130xM86inMtsUj0spUbTGHWjow=', 'JI3XlmnsCdvwNQoV1sdcapvarO/KFNUTAJePE9GrbRw=', 'K4I4wVSPnL4p/TXPkee0jw69p+Y57faf6NWrp5JNU2I=', 'JDn9I5JX84GBx7489RPxv3I166lPa4lCqUy93s9vYvc=', 'IAlYI1KBphuixL4KoygqGMdLbSYvXefC4z0rs+iT3+w=', 'Dh7KXfiO5fYM+n4f5b77txn62CEfqbLQL8wjMZDBfxI=', 'JrU0J/mz6ix2nZxmD8YIgaFpwScy0AG3FY7ksbhCyiQ=', 'IPOz9Kyv6fivPgZmGzqPd4+igSUiudcKZ0As/42ysbQ=', 'IR5dKznWJSCnpifs6MrLrJ+XUG3vTsKGkoumwn1GOxc=', 'C7dD7jSAISnFVnMa7Z0wLc0IUxPOVy9iQtE4MuU2tLQ=', 'I8smYbSI7nHkx1P/I65L0l2KRAlPZrZTKXfiIUDrpcs=', 'A6NaoxI5Ec20U1uu0zWfX2pSBbnJPvMdNTI6R4B7i8k=', 'J4A4SKCu2WqT+pQ7ZjXkUCF+E39K3nSmLXkXMicUtpc=', 'DLN4OcLJp/95iEy+x19B6b5eR8dtYVOCMb2BYpltb2c=', 'HwAm0L8fjh3VQjzC/sH7XNqh7NxMPLIY287vd8ANL5M=', 'AqfXu5cLim7S7mb6u7qVa22jsQD1tfuSju9C+XCCc8k=', 'DP1/QhXkNMjaF+wyWLC8YFrRqy6QqklDUeTuQLvEkfo=', 'GAsRtyBiKhVoSdxvf25/VxZZvmloIjDF7ZrDOXAKfN4=', 'BOlqllvOPToKJKSkV8lRWCyHE0nOfu4aq/5XipTGUBE=', 'FZMfeCtF9/tlbyzb0fdwXDU6I/4dMKWkahUi7RYN860=', 'LiluV8l6Uwms0m/r9VrJY6VETBxfcDrYig17l7ndOLE=', 'JhV7zreOhGu7Ji+aHgbUJxveWlvOjwQZlS+X/9E+rKg=', 'IZTriYR9aw8Yl/Z18ZwMVrYbEySO/zyjbjT7nRx57kM=', 'I1C/NUd2VomRUa193pbqeFfhVQFEcAjatrPSfI/6J08=', 'GkhvCuWRys2vCcWKScTReVQFQ1NAgZ4APwRp0RC3dSs=', 'G1bc92+yPMSoNNRVpAZeEzVxQCt98wnVm8MQXUKowwE=', 'GnSdeWSvC3ICkT7yBMZT8rS/tlzqt7aFIzq1nOO7aSU=', 'GK5ZAHP5aWlq92L/pOjw67+X+Mx4fjfN3R8yG+O+rbs=', 'IcR7J12C3eZGDV52mplCEUSxxanaWSlK3py7MXED8kk=', 'BHPdvVLnN+UnNk6OtjIHl1w41f1swysnIQKwgs0VGPs=', 'CxL6yVttOogdiSZXyEJOZFrE5rAFFfkC1ZRXQwKybgI=', 'CK52FqJgz2ZX+Pc6woRYjSxfB/9CXYN6p83O9j4+IQM=', 'A52vaHYoC4Doc78qMv0oNKg8aXV7rdWKiI74Gekmzig=', 'Jeex10cKPHXxPwtWVGyOCfLY7+/wbvdm+ceDyoadEw0=', 'Ho/TY0w/92QYTQNDX5hYSxG1sVrrnHUmLaPx6iwqnno=', 'JB3MUaw3gIpBXdHjwoHwWv8ReJ3Ayv3XejVITgmT+aQ=', 'H/wxU8Vu+XVZMs6ivgVzdJva/hxPoHgaS4tAeM6ddUc=', 'F2MNYtmj5RDIik1Dw2D5K8D6ALZgMa3sKb2VQ/06F+4=', 'KYBADt0ddOPWnbVFjSzNX6vbI27BaoKkMBoKtZ6kpuk=', 'MDT7JDZhI+xtyvytNXJtv7FhlMA23NZI+mlDm/zQDNQ=', 'Gqfo9Bicqd/z2yq3ZIvgojkplc5GBB4EaA3KitcjLfA=', 'H6GV+DSmnmI3L2DrSX2hZ2RurhQVPYA7OdxdEfXXgAs=', 'DyPxx01fv2GVrVpq7l5WmTxUd+hFP1uToNe6/TMwNtM=', 'AWVW+sk0inNatQqgiclxUbPKrwogo0+52TcFBaFRVyk=', 'I9kreTZIEQ/Fru8GM/DHfKyw27yhh5uKb25d9EXl9ws=', 'LkwQ7F5l4vI5u8Q8EwMd8mhqtA/XmjBLBdYRuCPyO3M=', 'EkGLv9d7Y61eFoZK2cMv+/xaPdm3jsK3kyn+XgqNKVM=', 'HkqKrOFavB1bdqnoSEMdLAanj3K2vrsSk+bFjlGFaW0=', 'Dz6WEH3s29aHLCDqCaz5LN8Xo+4dEzFIgJLZYXbet1U=', 'ASw3gCB/OVzCHesKvZUWge6jJJjdumzol6j58MI1cGc=', 'E+qxtOZyuhscG7kBdpMB8eVlnQPqEMYd4kd/8KwiFCE=', 'INxmSrsgt0VsBmKc43oeyxonpOiyTjG0i5xGNaowMj4=', 'LGseLP6njiw2eF52qM+xsFfpRx8k9bORF1w97LAeAA8=', 'GIySYlX1t689qWNVcpwqhnCrTCxwQASBsqyQN0Dgxas=', 'L5kTII4J49bp5vumOE/QdquJ8mYpduPjDghwuzDrVPI=', 'KzOAPZCIlwbnFPcgtWKNJvtgtUWh8+nOSaaukSsCQIY=', 'JsyrwQ6wQyfLXMPd4quzbwlwhsl+c4wTPJ9XB350iwk=', 'GxauDXxUQIy3X9kx8kZ1HysMPcINeegqJTG3bCK01d8=', 'EdC7RhvYryhE9J8PhAyU75UYslETRHQtH1Q4/j1BWuQ=', 'IzAxhHtHa+rQEY09szjokTPsQg1nPlBK1kclnfZVVx4=', 'H4TpeJW+5DjrPJLcmxhGya0pwWQ4ewautu0YQe2MTco=', 'J39/m1QvDCu19FvtBU8JYkU2AQw8+UUtInMZMyf4AdY=', 'HvyckGnlBouqwT0uZkVkG30n6A/CMHcWFTXERoLuV6k=', 'DW7Ed3YeLvusTxSzvz1SV6meZMPyX+EE+vmIsg/l/0Q=', 'Dg59fFUBmZt9Fhc7WbfK4fIDvvIa6/ACUYgUOcz5MBM=', 'IXvvL08SxtzJHCBYojORy3feU8puRNzcbqPTb+oybqY=', 'BXgMiK3wFTG1D4F+P+RER9KbNaqKOJxx6M8SJqzvaLo=', 'GHM4h6ays7TJDY5JkBluI0ReR9fqWTnr+4mj7j1ntL0=', 'ILrOY6z8rgscnyvuJLjp2oW6WX03sJBXIMTxXbIxsHo=', 'Fm6llTdaZ4asUn7p7O1z7Wv1UIdqvK86yStCyAiwDY8=', 'MEJiqe/0BArPQ+Mi1vUmdq4vhT7C56gNsAxIjPkXx04=', 'ImuscFAWbl9tt4zQsS028wW26MmgVRFK13Ceb1ckW2s=', 'JrL1OcVzgp9qypG6qVRQW8XD604d8dY4WCcX+98jiMw=', 'BqD79M1S6Tul5MbEr2XbAu6WKX+K0gDy8c/yUudptVE=', 'LLnCQRLTU0Gs6siDYPtSiSTli27KwyG5+ynmqjNo/yM=', 'IOiKTWB1Jt0H/gijVSpEZpEp64f8wLE6rI/or9kwFSE=', 'FURkmivXPjunLzlt+R3WVAHdj69R3jJfuu251TatlPw=', 'GYAHdFeZVxLETafhdxMljj+Os1S/2A7Z6vPsuvaWAQU=', 'JdHSL/E+dwXTwIX5f8Tk9pFLgv+qXSCR7GTaxCN2Xvc=', 'L+yZDvVW7+EDWkZP9VgedAZ0Rc1Uq8r2uMA5n+DSTPw=', 'G9lWNQbZVE7z5IMOE1RQEsV5N5wtzBMwQWxK5JvE7GE=', 'AK/80XumADxW36hVcfwpc3siWoDUgOfdft7AHxTyMBA=', 'I2cNuu+WaIHwf5GaLYgxKMeyPPdnpHeysuB2K8DbwYs=', 'H5OlMpFzlMfiL9F6vupjicZv164t2fAvhg9tlpR/Dt0=', 'LeQun1N7fWGwITdxwOdPVVUSvge2pQk0c04sW+tAvjc=', 'JcVX9FuZeBzTfTuyKTFmKmf3izd4LIhbRWu5bVXohAQ=', 'IHTItwlwXJiIU4p/ijxK/2R3Mb0W+OJU+nTqnyvnZiw=', 'Jzg1WVYpgTiUnkQhcdak5LdO8gZXQNt8/DoLYP1XOss=', 'E9Nq0KTr64GWl3hkllnGXLfQxBzFGYcf23Gp6moMqlY=', 'CKLBi6QTgTSMGs+/lhdxaAa0YqFpG8LjQ7ebgIXjdrA=', 'BZCS/Dla7ShYB7v1V62aEEH1nAeYIrEIhFeIL+57YSw=', 'FhkkFRtaWtLYysEZUiqZGpBvFehTHccFZ/ayg3HMJOM=', 'HGjKj3qhdlkHVAXvY0G45popi5pNcvO7hUswnkuoehs=', 'J/XQO8ocggf3I5pLLPc65VmhWqN+e93fOqsF7sXOVZI=', 'Dsv/SEaWKpddNH6pqPxGX7RoYVV2IvLCVkp+Y5gzwWk=', 'J3xN4jY9i1tFbPxaf/jkb/LsjapZhV9a1kvAUh86xWc=', 'GxGGLFKs01G3pGR5P0+7V/7Jn4MrYyJvldF1yNL8CLI=', 'BqcZxYTHT/vdchjrVly0yL2GyS49+zxz4VJyAapRI04=', 'Iw5K3uy3mYd/fOmljINrmdUzWEoZXB13oxOr4cfRJr0=', 'ELEJuGSAnEdnoTPM5sutbIhigXO46lHozKhYMMp95SI=', 'DiEReXDc+9SxUmslNjbzd1ONO0+q61qLJL9iANFMxZE=', 'Jmc0mXhAE2L2sXk57rDmT/VWB+vbNccHHbRrs+e6R3g=', 'BQAPpf2lBeApoTv+MEwmew2GxywDm6v20/8C7iRr4C4=', 'Jk2eCUrtX0GmAkIiCjSihAiQh7JDapv86BdMyb6MLiA=', 'CAdvnEdD3mEw/2Is9AHt0skvJL/hFPPF5ySJF0YxXEc=', 'EyNwq927Cx3VfypSDCUza9fO3pS5W79cIVHW2I5kG2Q=', 'CP8RFreiJ7/f1EZaZ4kIgrYVyMTBfyjY0klY7fYC3cs=', 'K8sLDbi54+ArfpwclGD92cbNmFYjMuZI2KPgq5RZdSA=', 'EupozmiBvsrX+KaxF7A6uXb3q9WX+QOwvyMNINIalDo=', 'J0OcmKdmiAZ6CXsZtv3X141fiOJ04Nj+peprdAb92n8=', 'AvQNCtBfVlLjHvlECtcevIQZ45NJOTfwXwBJnQKpnjY=', 'L78EKEMn7k9oDwa9OQ4wnQ0TrMdLnFsUtjBZuMx6v/U=', 'G+aG1T4qitV6gosGUUJc/Gl4xwJ+2/JH9rZyPCHfhuc=', 'JoO0JehaUI+WhS8UtCIPz+n3rYsXv+/A40jEfKeLtX8=', 'FtrOmy6AEuMdscfr5nLYa75hoao+FpPg7d/A3gqd2VE=', 'J6Mh+MfTyQIuli9/7y48hItFOdu3WqE58wQw/lRbzts=', 'BszXIQ3uHWsOIreeEtGQgtgHi3iNcQB7leendO2GplE=', 'CkHdQiIWU3Ur7zUPbXSpF7bLsf12o6EhZvTQvpeOQCY=', 'IgoCiB5NR6yU2VDN+DhidNF4LifL0NhFl43uyRKY8WU=', 'DiFVpUX+Xzy7Y5dgZYnqwZzZJjkznGsBcpikrTQItLk=', 'Dw8ZxikeUVRqJnxgzHdOX7nQiLrFMHgtiR7Br0uEcHM=', 'DpJbzRxt20o6HGfsje771AxTwNM+eu7xtGeVrtWUPJ0=', 'KtAAsXSKu4Es1uVBEoa5/z7wpb09JZo25F7wW561vus=', 'CmWqIy0y7W6N5j0c3/68Lz+mFkZcJ6r5fozT3P9khlI=', 'AmPYRwq0scYddNjoliQvTyYdyxZ6OgaSOJPXyyyT1qE=', 'KQHZRq3clLBA/VgATZpfjNGSZUDHqGEs7BxYy2DCs6U=', 'GInPqCCfSVLfkCLbncWDtXF6BpbaQc7mSTfQzWMh5pM=', 'I2Bk1xy2xkyEdHrCX8+NiBUC5fA7/4dWG4WhFrHzmso=', 'L/ehdP/Owphi4E9dvcc+vzZhVwAzV2KQwMH2zYztJ64=', 'GeckoddCyrEDRV8AQO33RaJpanEITJPjInFUUN1Nb1s=', 'A+7TiStvDmxdoQWcXzeTmFg1qig1AKgSmQSpTIfxYb8=', 'COK4Jzv6MMGshQMG2R5Gip6NBQkq7ky8gMaHJIRjujA=', 'B63Mp22DN3KIOaG2rDs+1Cr7h9cq+Y9S9Bby7FiyjOw=', 'Fx7zeJa64rECCgpYOb1ReEzhG7QjfVSMFxFp0y+hm0A=', 'IP/fy4b00AUGTtvClpGMMy0y++/xcp3lBWomq7w6Nfo=', 'COzXpvFzXu2GuqCU5gj0iPONuzmPz+1LmUODoMqORkc=', 'HD9dhuWSH96YkBifHYxhh1QohgDmkovBgqxNXkyfDMs=', 'KcYRhO2dRg8zdVihr2Oap+PAl15AFO2OvK1KJdUeq/M=', 'De/UWyiVhygiituy29rval6bGmSQKnNPQCuM77irO1Y=', 'CnTqItigkzYGBhAXmsHYL/+pSS33be7U6mDgEzsIEag=', 'A6N78S2vFADSl6xKwTuiTBfcJi2xbIUj3u5ODM3ppoA=', 'Ef4XkNWrv1k1/yIxjk9//mmWatovkTa1T4MOrLCmU2g=', 'AYFlhC9AY3XyNGaGkVr7FL8f4FZMiFjuO94Kuj3l9o8=', 'Jh2yXnz/Wp+3LydrH5JgtmcwD7fTYbUP1cDotplbBfk=', 'KjrDMUsrZueW++Nt93jF5GlyMgzEPsgHBIgmtnBLp8Q=', 'I8qkuA7PqZ6dP+orvB2782nRv8iTfQPQdAYcMP2M12s=', 'J9smAIXiJImN8UXyP2NfIGbY5OEk5YHoxiYZKbHf4Qc=', 'J09sX9NKeE1rkV7wXUJO5sC6u/Np55qxOLgWe1YY7H8=', 'LDop4TqE0moJEckona8apM9YQKraBwHVfiPfx5babaE=', 'HqIQ8gAaM00+gB9OUycNQtp6rzF6VTtCgqp46qIoLm0=', 'JU2+tSiEtpnBun+g1ugNYQkDsYo+UJw2NRzMOwJJRuM=', 'BZ54HWWJbr4OS6JtwvKZB/R7ze2kososcT2FBeox/V0=', 'C1sc7GPULV5hXcJpuIWiTO8wPseMly3RfNuz6RXMT/s=', 'KnwBXpw7LFfKi30m05obzIXW/6y32fvWbSqPHWTtDJI=', 'Kbc2uRHXGnnPY9im94bxG9Wr7iQWHcVnp8hR6uHkO1E=', 'KFdFqQp/49Ca9agIcEvGnG8XAeVzkS31zB4mXVlsQUE=', 'LZAbgZXDyWyMNuuZ/sATTsK4MEroEL0w2lVOMICCZxU=', 'GQXTUYNV6rp4WbWR7XuMnCU5gPBFDb31TXp3groFg5I=', 'I+gTAm/AuABk0ZtcVCiUL99+/qgL+o7ECVJyv9t7TJ8=', 'I8ChmiUsh+axwcIbGnmAAgDD+/8+MwDn5VaAcd6e+4E=', 'EcSuYHuuSSQTv2LNqiwoaO0f7G3AYxsGfKYPqxJbnio=', 'LNBV67fuRoY2XepFDwRv9iQF+uGxr8n7AXB8+B2g47k=', 'BTyf7y4CH6miD62iL96hUFtYoxWbu0czfb95GyFbFFI=', 'CjW9dOh8urqr6JrRMZ0snoY7TGMcIZOMmlOVv5eHKp8=', 'HBFQVlOc4gzVoE0aXEPisA++g7JZAb429d3EZm/Dg/4=', 'JClUBH5Xcv073tWQ7IvrTFQvLiZMjD4oTNxHNQXFGpA=', 'Diq9MVtHwNyThJwM3yZ+gRy9vbIApufCtn7ffLAXQhQ=', 'KCs3AgwIkNdRw/12lQ2AaGaOHf6uYh3VUtLeiH2i6nU=', 'KJM4UiZrUtnqa1u5I9nZTy5aW+XHeOdeB5QsI0tkO9k=', 'CZq2dlUFuhGY7xQOd7eVTU++eaBWznK6zjnASMANo88=', 'KvIR2OCsLY/af4SbjyKaIlxhhrVXYsensq4tHdhcV8s=', 'DNBw8jQBSigJq5DHHB2mHpipYyL+3Zm2qq4coQTz+s8=', 'Jnk+KryNPDDGBib7qhWPJjWH1r0Vgz1EixFiZLkwJWo=', 'IlvjbtDuheH4Ra2oTldIpWaZFSET/2G1BWtti95gwZ0=', 'AhdPSe2wLVFU0r7KLckrnMWVOD2h/ejwnkte4+paBl4=', 'D2SJHCyLAg5Gw1lMt1jwvdzb0JvQMIgW+0FzSoaYcsM=', 'GSqEyi+Z02mR4tKx3v85idHBVsI54Q6fVhQOGFRXYGc=', 'Kd/Ne2PwWr8nU6jDQda3pgxiQ7BMmhuLMyC7oEpNR4c=', 'HuJ61rm1qGdzOvxhorPnalK6PkvV5let6R/AOIGduls=', 'CrR3PxUMP4rTvJU49DzsOVp+NzGulz/v62I6CSF+ZMc=', 'E8NSoC9ZUYYgLLC5n6WMVUKrZ/m206Cv0QPe7/bYD0E=', 'KpfPLBDEv7/SmfZ8UqFp+SwFt9rFakHE3U/ofIJGzhQ=', 'AL7LtHBCvX+Mn2u0IhYtGu0ImihIL3/RarBqEyhf5wI=', 'AI5E2iHXOGkbiBdX7zftKcW9n3pEUPz1MpCpLMLKIXY=', 'KyBai21LcGPZMfO7XTRkBThD/n++S4PBeIP4ZSeIKhg=', 'LZ4yp8kFVv4QjSVawB513zOPzWOyv4TBkoDUJymIY/w=', 'KaMiqEwlvS3fbi5CACKNlavWNJoCJmrB27pSBzjOypc=', 'BnjJv8by3wEvT+VeM7torBTO0d8NAhUnkgidBG2CjEM=', 'D6/zpedCV5T+IKfg62FbixdgOUt/IwQoajrkAJEk2yM=', 'H49bYRr5/rnOqGwIQFgSBVPkBBA67iE/WkHR0CVBwNM=', 'Fgh12EeWAvlvQKzC0ELuUsFYi2op3kKEllptxskw6gc=', 'Fth6UYOjFqHXCvyVHv4s1mfHcyj8/aRYy/X+MEX0bZ4='],\n  M: [['EkZm+AVh7VkW8vBwsb0kjG1T9E0nPZVqDIe5F2kqTRg=', 'EZJPAv0ZsJJVqqHPRuoFGOPXv+70dCFglJEBHbC9CwI=', 'JH+n8CIwShmU/1BUVsIgHvm3FzaUmNP/zkRmAe2d+EU=', 'A/17Ge8shh8i93/4EPVOJ3vJTrdsAtedmGvj3N8FHD8=', 'GL1BI5w+cVeaZ3RD7P+9VVqB7u6mk1Kmi2fIVjwMKgY=', 'LXjDpdKN6f81vwoldjUZblcwyn9ASTJ3B4zXXai069w='], ['ClFKXCJ/TOyV36Ap6N0STDSJWqRrsnwJEfN4DVAVVAo=', 'GS4W0X2VayV7haZS7v3y7glYnqxb6AkVd1cj0ssdoG0=', 'KYzgweMRO7k1xwWOd3K1M7GqnbDAkmvciRflYFyjrBA=', 'CUy06DYhr9Jx5BvHFyfwFY69YSI5rJ1pixf+S+Bbf8g=', 'A9iAOVvpPCfWSa9f0ULnazORjLiEHVooFzvVz30yh5E=', 'KO6ua1hmrWjkQ7uvkWgNt9fiswN+OP72G0LLzP/OyoE='], ['J4u0mntORK6kbrD4gstpKAGm5g/dW1wjxjzWXMzk/go=', 'Bj7ewb7YMfUGr422SNb96hRTRYh+i9z/EJA1odm2dNc=', 'G67xy1UJtSakIGH7U2V/mbMjJQDoVRksvoyUDgaMR18=', 'EyRWSse9+eIhZOmFjX+o42ixZerqPa9Otn7lnA3y5dQ=', 'AFdhuMauyxqMpOpN/CyDdgZKSoAEzu2iEKVSQFYt3BM=', 'EMnigxWdWMtMsuNf3oOjuh/cKAAu2ZY9KpnxhheKFI0='], ['DDmen2eqQHB6ID/u+wuVi72tzsXKNJAdJT0CaiQZ9qI=', 'CD8N8/GgNR0DMOw/9gLKjMNTt/bnYscQcYTNe0I0SfY=', 'Gmdk1ZQ/xKcgtMChn9uMcRmEMHKHpYubX59dWCEssmM=', 'ARpjom/qv4f6Zr3mbMJakiyWOC12xqf/SPFTe+rtaDo=', 'CMp7ZGV8NUjzK+9bY60kKIpBwLJRCZrSf5Q0MH4+ZNQ=', 'AZmCcEcek2GVVEawzbi+qRXsBnXxzWSN3LBDA1B6RIk='], ['HWs9X26jacJvgl0jYpM+qjHqNewKd8H72eAcoVI+RDI=', 'EZ7xiLs90NMjBpdsGZQehmS+aH56aWkton2iFabwbUA=', 'LZ4KtcBok9/f0DSBOBuoa25ikt9WCdcfLGSy2aefgJ4=', 'JfFmMb93Bg9+o0CHwCW/E1eEMZ7wjNouMUGe4KUp5lg=', 'FEx6EdpafF2rrj8z+9A8rYbRi8WUx5pJfsuYlO21VPE=', 'D5cRYmJ3I/P+rayyiwwQTLj3TeUIdS+o18DbKvE96O4='], ['JL5RAJVDYgbdCr0LDLuVyIOrMEqlJZixppMG7JgaaI0=', 'IRYQ4q1KN3Qm+t9waLDBpsKZoWTBwaYD6u2USHDQubk=', 'FaZ9mBBBsfbwnz+evv2GTnedOvCBV3hqwHdQXlDsefw=', 'BJMn+nnSjBKiyCQGlH938Gd1sCh0aLMTaHdwHb58lZg=', 'IwlA3MUjJlj/nClpej/UFtFw6MmY8aqF3qDELXn5Uao=', 'GxIcBJzRFZ4okAfgydqZlcxLq0wm+4iOw5cqii5laWQ=']]\n};\nexports.default = _default;"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,OAAO,GAAG,KAAK;AACvB,IAAI,WAAW;IACb,GAAG;QAAC;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;KAA+C;IACnomB,GAAG;QAAC;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;YAAgD;YAAgD;YAAgD;SAA+C;KAAC;AACjtD;AACA,QAAQ,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4908, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/poseidon5.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.poseidon5 = poseidon5;\nvar _poseidon = _interopRequireDefault(require(\"./poseidon\"));\nvar _unstringify = _interopRequireDefault(require(\"./poseidon/unstringify\"));\nvar _ = _interopRequireDefault(require(\"./constants/5\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst c = (0, _unstringify.default)(_.default);\nfunction poseidon5(inputs, nOuts) {\n  return (0, _poseidon.default)(inputs, c, nOuts);\n}"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,SAAS,GAAG;AACpB,IAAI,YAAY;AAChB,IAAI,eAAe;AACnB,IAAI,IAAI;AACR,SAAS,uBAAuB,GAAG;IAAI,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AAAG;AAC9F,MAAM,IAAI,CAAC,GAAG,aAAa,OAAO,EAAE,EAAE,OAAO;AAC7C,SAAS,UAAU,MAAM,EAAE,KAAK;IAC9B,OAAO,CAAC,GAAG,UAAU,OAAO,EAAE,QAAQ,GAAG;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4928, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Beddsa-poseidon%401.0.4/node_modules/%40zk-kit/eddsa-poseidon/dist/index.js"],"sourcesContent":["/**\n * @module @zk-kit/eddsa-poseidon\n * @version 1.0.4\n * @file A JavaScript EdDSA library for secure signing and verification using Poseidon the Baby Jubjub elliptic curve.\n * @copyright Ethereum Foundation 2024\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/eddsa-poseidon}\n*/\nimport { subOrder, mulPointEscalar, Base8, inCurve, addPoint, Fr, packPoint, unpackPoint } from '@zk-kit/baby-jubjub';\nimport { requireBuffer, crypto } from '@zk-kit/utils';\nimport { bigNumberishToBigInt, bufferToBigInt, leBufferToBigInt, leBigIntToBuffer } from '@zk-kit/utils/conversions';\nimport { requireTypes, requireBigNumberish } from '@zk-kit/utils/error-handlers';\nimport F1Field from '@zk-kit/utils/f1-field';\nimport * as scalar from '@zk-kit/utils/scalar';\nimport { Buffer } from 'buffer';\nimport { poseidon5 } from 'poseidon-lite/poseidon5';\nimport { isArray, isBigNumber, isObject, isBigNumberish } from '@zk-kit/utils/type-checks';\n\n/**\n * Copyright\n * This code is a TypeScript adaptation of the 'blake-hash' library code (https://www.npmjs.com/package/blake-hash)\n * using the 'buffer' npm package (https://www.npmjs.com/package/buffer).\n * The 'js-crypto' library (https://github.com/iden3/js-crypto/blob/main/src/blake.ts) from Iden3 was used as a reference\n * for this work, specifically for types and adaptation.\n */\n/**\n * @module Blake\n * Implements the Blake-512 cryptographic hash function.\n * Blake-512 is part of the BLAKE family of cryptographic hash functions, known\n * for its speed and security. This module offers functionality to compute Blake-512\n * hashes of input data, providing both one-time hashing capabilities and incremental\n * hashing to process large or streaming data.\n *\n * This code is adapted from the \"blake-hash\" JavaScript library, ensuring compatibility\n * and performance in TypeScript environments. It supports hashing with optional\n * salt for enhanced security in certain contexts.\n */\nconst zo = Buffer.from([0x01]);\nconst oo = Buffer.from([0x81]);\n// Static properties for sigma, u256, u512, and padding are defined here below\nconst sigma = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9],\n    [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11],\n    [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10],\n    [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5],\n    [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0],\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n    [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3],\n    [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4],\n    [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8],\n    [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13],\n    [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]\n];\nconst u512 = [\n    0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6,\n    0x38d01377, 0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,\n    0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99, 0x24a19947,\n    0xb3916cf7, 0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69\n];\nconst padding = Buffer.from([\n    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n]);\n/**\n * Performs a bitwise rotation on the values of two elements in an array.\n * This operation is a key component of the Blake-512 algorithm, enabling\n * the mixing of bits in a non-linear fashion.\n * @param v The array containing values to rotate.\n * @param i The index of the first element to rotate.\n * @param j The index of the second element to rotate.\n * @param n The number of bits to rotate by.\n */\nfunction rot(v, i, j, n) {\n    let hi = v[i * 2] ^ v[j * 2];\n    let lo = v[i * 2 + 1] ^ v[j * 2 + 1];\n    if (n >= 32) {\n        lo ^= hi;\n        hi ^= lo;\n        lo ^= hi;\n        n -= 32;\n    }\n    if (n === 0) {\n        v[i * 2] = hi >>> 0;\n        v[i * 2 + 1] = lo >>> 0;\n    }\n    else {\n        v[i * 2] = ((hi >>> n) | (lo << (32 - n))) >>> 0;\n        v[i * 2 + 1] = ((lo >>> n) | (hi << (32 - n))) >>> 0;\n    }\n}\n/**\n * The G function is one of the core operations in the Blake-512 compression function.\n * It mixes the input values based on the message block and the round constants,\n * contributing to the diffusion and confusion properties of the hash function.\n * @param v The working vector, part of the state being updated.\n * @param m - The message block being processed.\n * @param i The current round index.\n * @param a, b, c, d Indices within the working vector to mix.\n * @param e Index within the message block and round constants.\n */\nfunction g(v, m, i, a, b, c, d, e) {\n    let lo;\n    // v[a] += (m[sigma[i][e]] ^ u512[sigma[i][e+1]]) + v[b];\n    lo = v[a * 2 + 1] + ((m[sigma[i][e] * 2 + 1] ^ u512[sigma[i][e + 1] * 2 + 1]) >>> 0) + v[b * 2 + 1];\n    v[a * 2] =\n        (v[a * 2] + ((m[sigma[i][e] * 2] ^ u512[sigma[i][e + 1] * 2]) >>> 0) + v[b * 2] + ~~(lo / 0x0100000000)) >>> 0;\n    v[a * 2 + 1] = lo >>> 0;\n    // v[d] = ROT( v[d] ^ v[a],32);\n    rot(v, d, a, 32);\n    // v[c] += v[d];\n    lo = v[c * 2 + 1] + v[d * 2 + 1];\n    v[c * 2] = (v[c * 2] + v[d * 2] + ~~(lo / 0x0100000000)) >>> 0;\n    v[c * 2 + 1] = lo >>> 0;\n    // v[b] = ROT( v[b] ^ v[c],25);\n    rot(v, b, c, 25);\n    // v[a] += (m[sigma[i][e+1]] ^ u512[sigma[i][e]])+v[b];\n    lo = v[a * 2 + 1] + ((m[sigma[i][e + 1] * 2 + 1] ^ u512[sigma[i][e] * 2 + 1]) >>> 0) + v[b * 2 + 1];\n    v[a * 2] =\n        (v[a * 2] + ((m[sigma[i][e + 1] * 2] ^ u512[sigma[i][e] * 2]) >>> 0) + v[b * 2] + ~~(lo / 0x0100000000)) >>> 0;\n    v[a * 2 + 1] = lo >>> 0;\n    // v[d] = ROT( v[d] ^ v[a],16);\n    rot(v, d, a, 16);\n    // v[c] += v[d];\n    lo = v[c * 2 + 1] + v[d * 2 + 1];\n    v[c * 2] = (v[c * 2] + v[d * 2] + ~~(lo / 0x0100000000)) >>> 0;\n    v[c * 2 + 1] = lo >>> 0;\n    // v[b] = ROT( v[b] ^ v[c],11)\n    rot(v, b, c, 11);\n}\n/**\n * Processes the carry for the bit length counter, ensuring it remains\n * within bounds as a 128-bit number.\n * @param arr The array representing the 128-bit counter.\n */\nfunction lengthCarry(arr) {\n    for (let j = 0; j < arr.length; j += 1) {\n        if (arr[j] < 0x0100000000)\n            break;\n        arr[j] -= 0x0100000000;\n        arr[j + 1] += 1;\n    }\n}\n/**\n * Represents a Blake-512 hash computation instance.\n * This class maintains the internal state, buffers, and counters needed to\n * process input data and produce the final hash output. It supports incremental\n * hashing, allowing data to be added in chunks.\n */\n/* eslint-disable import/prefer-default-export */\nclass Blake512 {\n    /**\n     * Initializes a new Blake-512 hash instance with the default parameters.\n     */\n    constructor() {\n        this._h = [\n            0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f,\n            0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179\n        ];\n        this._s = [0, 0, 0, 0, 0, 0, 0, 0];\n        this._block = Buffer.alloc(128);\n        this._blockOffset = 0;\n        this._length = [0, 0, 0, 0];\n        this._nullt = false;\n        this._zo = zo;\n        this._oo = oo;\n    }\n    /**\n     * The core compression function for Blake-512. It transforms the internal\n     * state based on the input block and the current hash parameters.\n     */\n    _compress() {\n        const v = new Array(32);\n        const m = new Array(32);\n        let i;\n        for (i = 0; i < 32; i += 1)\n            m[i] = this._block.readUInt32BE(i * 4);\n        for (i = 0; i < 16; i += 1)\n            v[i] = this._h[i] >>> 0;\n        for (i = 16; i < 24; i += 1)\n            v[i] = (this._s[i - 16] ^ u512[i - 16]) >>> 0;\n        for (i = 24; i < 32; i += 1)\n            v[i] = u512[i - 16];\n        if (!this._nullt) {\n            v[24] = (v[24] ^ this._length[1]) >>> 0;\n            v[25] = (v[25] ^ this._length[0]) >>> 0;\n            v[26] = (v[26] ^ this._length[1]) >>> 0;\n            v[27] = (v[27] ^ this._length[0]) >>> 0;\n            v[28] = (v[28] ^ this._length[3]) >>> 0;\n            v[29] = (v[29] ^ this._length[2]) >>> 0;\n            v[30] = (v[30] ^ this._length[3]) >>> 0;\n            v[31] = (v[31] ^ this._length[2]) >>> 0;\n        }\n        for (i = 0; i < 16; i += 1) {\n            /* column step */\n            g(v, m, i, 0, 4, 8, 12, 0);\n            g(v, m, i, 1, 5, 9, 13, 2);\n            g(v, m, i, 2, 6, 10, 14, 4);\n            g(v, m, i, 3, 7, 11, 15, 6);\n            /* diagonal step */\n            g(v, m, i, 0, 5, 10, 15, 8);\n            g(v, m, i, 1, 6, 11, 12, 10);\n            g(v, m, i, 2, 7, 8, 13, 12);\n            g(v, m, i, 3, 4, 9, 14, 14);\n        }\n        for (i = 0; i < 16; i += 1) {\n            this._h[(i % 8) * 2] = (this._h[(i % 8) * 2] ^ v[i * 2]) >>> 0;\n            this._h[(i % 8) * 2 + 1] = (this._h[(i % 8) * 2 + 1] ^ v[i * 2 + 1]) >>> 0;\n        }\n        for (i = 0; i < 8; i += 1) {\n            this._h[i * 2] = (this._h[i * 2] ^ this._s[(i % 4) * 2]) >>> 0;\n            this._h[i * 2 + 1] = (this._h[i * 2 + 1] ^ this._s[(i % 4) * 2 + 1]) >>> 0;\n        }\n    }\n    /**\n     * Adds padding to the message as per the Blake-512 specification, ensuring\n     * the message length is a multiple of the block size.\n     */\n    _padding() {\n        const len = this._length.slice();\n        len[0] += this._blockOffset * 8;\n        lengthCarry(len);\n        const msglen = Buffer.alloc(16);\n        for (let i = 0; i < 4; i += 1)\n            msglen.writeUInt32BE(len[3 - i], i * 4);\n        if (this._blockOffset === 111) {\n            this._length[0] -= 8;\n            this.update(this._oo);\n        }\n        else {\n            if (this._blockOffset < 111) {\n                if (this._blockOffset === 0)\n                    this._nullt = true;\n                this._length[0] -= (111 - this._blockOffset) * 8;\n                this.update(padding.subarray(0, 111 - this._blockOffset));\n            }\n            else {\n                this._length[0] -= (128 - this._blockOffset) * 8;\n                this.update(padding.subarray(0, 128 - this._blockOffset));\n                this._length[0] -= 111 * 8;\n                this.update(padding.subarray(1, 1 + 111));\n                this._nullt = true;\n            }\n            this.update(this._zo);\n            this._length[0] -= 8;\n        }\n        this._length[0] -= 128;\n        this.update(msglen);\n    }\n    /**\n     * Completes the hash computation and returns the final hash value.\n     * This method applies the necessary padding, performs the final compression,\n     * and returns the hash output.\n     * @returns The Blake-512 hash of the input data.\n     */\n    digest() {\n        this._padding();\n        const buffer = Buffer.alloc(64);\n        for (let i = 0; i < 16; i += 1)\n            buffer.writeUInt32BE(this._h[i], i * 4);\n        return buffer;\n    }\n    /**\n     * Updates the hash with new data. This method can be called multiple\n     * times to incrementally add data to the hash computation.\n     * @param data The data to add to the hash.\n     * @returns This instance, to allow method chaining.\n     */\n    update(data) {\n        const block = this._block;\n        let offset = 0;\n        while (this._blockOffset + data.length - offset >= block.length) {\n            for (let i = this._blockOffset; i < block.length;)\n                /* eslint-disable no-plusplus */\n                block[i++] = data[offset++];\n            this._length[0] += block.length * 8;\n            lengthCarry(this._length);\n            this._compress();\n            this._blockOffset = 0;\n        }\n        while (offset < data.length)\n            /* eslint-disable no-plusplus */\n            block[this._blockOffset++] = data[offset++];\n        return this;\n    }\n}\n\n/**\n * Prunes a buffer to meet the specific requirements for using it as a private key\n * or part of a signature.\n * @param buff The buffer to be pruned.\n * @returns The pruned buffer.\n */\nfunction pruneBuffer(buff) {\n    buff[0] &= 0xf8;\n    buff[31] &= 0x7f;\n    buff[31] |= 0x40;\n    return buff;\n}\n/**\n * Validates if the given object is a valid point on the Baby Jubjub elliptic curve.\n * @param point The point to validate.\n * @returns True if the object is a valid point, false otherwise.\n */\nfunction isPoint(point) {\n    return isArray(point) && point.length === 2 && isBigNumber(point[0]) && isBigNumber(point[1]);\n}\n/**\n * Checks if the provided object conforms to the expected format of a Signature.\n * @param signature The signature to validate.\n * @returns True if the object is a valid Signature, false otherwise.\n */\nfunction isSignature(signature) {\n    return (isObject(signature) &&\n        Object.prototype.hasOwnProperty.call(signature, \"R8\") &&\n        Object.prototype.hasOwnProperty.call(signature, \"S\") &&\n        isPoint(signature.R8) &&\n        isBigNumber(signature.S));\n}\n/**\n * Validates and converts a BigNumberish private key to a Buffer.\n * @param privateKey The private key to check and convert.\n * @returns The private key as a Buffer.\n */\nfunction checkPrivateKey(privateKey) {\n    requireTypes(privateKey, \"privateKey\", [\"Buffer\", \"Uint8Array\", \"string\"]);\n    return Buffer.from(privateKey);\n}\n/**\n * Validates and converts a BigNumberish message to a bigint.\n * @param message The message to check and convert.\n * @returns The message as a bigint.\n */\nfunction checkMessage(message) {\n    requireTypes(message, \"message\", [\"bignumberish\", \"string\"]);\n    if (isBigNumberish(message)) {\n        return bigNumberishToBigInt(message);\n    }\n    return bufferToBigInt(Buffer.from(message));\n}\n/**\n * Computes the Blake512 hash of the input message.\n * Blake512 is a cryptographic hash function that produces a hash value of 512 bits,\n * commonly used for data integrity checks and other cryptographic applications.\n * @param message The input data to hash, provided as a Buffer.\n * @returns A Buffer containing the 512-bit hash result.\n */\nfunction hash(message) {\n    const engine = new Blake512();\n    engine.update(Buffer.from(message));\n    return engine.digest();\n}\n\n/**\n * Derives a secret scalar from a given EdDSA private key.\n *\n * This process involves hashing the private key with Blake1, pruning the resulting hash to retain the lower 32 bytes,\n * and converting it into a little-endian integer. The use of the secret scalar streamlines the public key generation\n * process by omitting steps 1, 2, and 3 as outlined in RFC 8032 section 5.1.5, enhancing circuit efficiency and simplicity.\n * This method is crucial for fixed-base scalar multiplication operations within the correspondent cryptographic circuit.\n * For detailed steps, see: {@link https://datatracker.ietf.org/doc/html/rfc8032#section-5.1.5}.\n * For example usage in a circuit, see: {@link https://github.com/semaphore-protocol/semaphore/blob/2c144fc9e55b30ad09474aeafa763c4115338409/packages/circuits/semaphore.circom#L21}\n *\n * The private key must be an instance of Buffer, Uint8Array or a string. The input will be used to\n * generate entropy and there is no limit in size.\n * The string is used as a set of raw bytes (in UTF-8) and is typically used to pass passwords or secret messages.\n * If you want to pass a bigint, a number or a hexadecimal, be sure to convert them to one of the supported types first.\n * The 'conversions' module in @zk-kit/utils provides a set of functions that may be useful in case you need to convert types.\n *\n * @param privateKey The EdDSA private key for generating the associated public key.\n * @returns The derived secret scalar to be used to calculate public key and optimized for circuit calculations.\n */\nfunction deriveSecretScalar(privateKey) {\n    // Convert the private key to buffer.\n    privateKey = checkPrivateKey(privateKey);\n    let hash$1 = hash(privateKey);\n    hash$1 = hash$1.slice(0, 32);\n    hash$1 = pruneBuffer(hash$1);\n    return scalar.shiftRight(leBufferToBigInt(hash$1), BigInt(3)) % subOrder;\n}\n/**\n * Derives a public key from a given private key using the\n * {@link https://eips.ethereum.org/EIPS/eip-2494|Baby Jubjub} elliptic curve.\n * This function utilizes the Baby Jubjub elliptic curve for cryptographic operations.\n * The private key should be securely stored and managed, and it should never be exposed\n * or transmitted in an unsecured manner.\n *\n * The private key must be an instance of Buffer, Uint8Array or a string. The input will be used to\n * generate entropy and there is no limit in size.\n * The string is used as a set of raw bytes (in UTF-8) and is typically used to pass passwords or secret messages.\n * If you want to pass a bigint, a number or a hexadecimal, be sure to convert them to one of the supported types first.\n * The 'conversions' module in @zk-kit/utils provides a set of functions that may be useful in case you need to convert types.\n *\n * @param privateKey The private key used for generating the public key.\n * @returns The derived public key.\n */\nfunction derivePublicKey(privateKey) {\n    const s = deriveSecretScalar(privateKey);\n    return mulPointEscalar(Base8, s);\n}\n/**\n * Signs a message using the provided private key, employing Poseidon hashing and\n * EdDSA with the Baby Jubjub elliptic curve.\n *\n * The private key must be an instance of Buffer, Uint8Array or a string. The input will be used to\n * generate entropy and there is no limit in size.\n * The string is used as a set of raw bytes (in UTF-8) and is typically used to pass passwords or secret messages.\n * If you want to pass a bigint, a number or a hexadecimal, be sure to convert them to one of the supported types first.\n * The 'conversions' module in @zk-kit/utils provides a set of functions that may be useful in case you need to convert types.\n *\n * @param privateKey The private key used to sign the message.\n * @param message The message to be signed.\n * @returns The signature object, containing properties relevant to EdDSA signatures, such as 'R8' and 'S' values.\n */\nfunction signMessage(privateKey, message) {\n    // Convert the private key to buffer.\n    privateKey = checkPrivateKey(privateKey);\n    // Convert the message to big integer.\n    message = checkMessage(message);\n    const hash$1 = hash(privateKey);\n    const sBuff = pruneBuffer(hash$1.slice(0, 32));\n    const s = leBufferToBigInt(sBuff);\n    const A = mulPointEscalar(Base8, scalar.shiftRight(s, BigInt(3)));\n    const msgBuff = leBigIntToBuffer(message, 32);\n    const rBuff = hash(Buffer.concat([hash$1.slice(32, 64), msgBuff]));\n    const Fr = new F1Field(subOrder);\n    const r = Fr.e(leBufferToBigInt(rBuff));\n    const R8 = mulPointEscalar(Base8, r);\n    const hm = poseidon5([R8[0], R8[1], A[0], A[1], message]);\n    const S = Fr.add(r, Fr.mul(hm, s));\n    return { R8, S };\n}\n/**\n * Verifies an EdDSA signature using the Baby Jubjub elliptic curve and Poseidon hash function.\n * @param message The original message that was be signed.\n * @param signature The EdDSA signature to be verified.\n * @param publicKey The public key associated with the private key used to sign the message.\n * @returns Returns true if the signature is valid and corresponds to the message and public key, false otherwise.\n */\nfunction verifySignature(message, signature, publicKey) {\n    if (!isPoint(publicKey) ||\n        !isSignature(signature) ||\n        !inCurve(signature.R8) ||\n        !inCurve(publicKey) ||\n        BigInt(signature.S) >= subOrder) {\n        return false;\n    }\n    // Convert the message to big integer.\n    message = checkMessage(message);\n    // Convert the signature values to big integers for calculations.\n    const _signature = {\n        R8: [BigInt(signature.R8[0]), BigInt(signature.R8[1])],\n        S: BigInt(signature.S)\n    };\n    // Convert the public key values to big integers for calculations.\n    const _publicKey = [BigInt(publicKey[0]), BigInt(publicKey[1])];\n    const hm = poseidon5([signature.R8[0], signature.R8[1], publicKey[0], publicKey[1], message]);\n    const pLeft = mulPointEscalar(Base8, BigInt(signature.S));\n    let pRight = mulPointEscalar(_publicKey, scalar.mul(hm, BigInt(8)));\n    pRight = addPoint(_signature.R8, pRight);\n    // Return true if the points match.\n    return Fr.eq(pLeft[0], pRight[0]) && Fr.eq(pLeft[1], pRight[1]);\n}\n/**\n * Converts a given public key into a packed (compressed) string format for efficient transmission and storage.\n * This method ensures the public key is valid and within the Baby Jubjub curve before packing.\n * @param publicKey The public key to be packed.\n * @returns A string representation of the packed public key.\n */\nfunction packPublicKey(publicKey) {\n    if (!isPoint(publicKey) || !inCurve(publicKey)) {\n        throw new Error(\"Invalid public key\");\n    }\n    // Convert the public key values to big integers for calculations.\n    const _publicKey = [BigInt(publicKey[0]), BigInt(publicKey[1])];\n    return packPoint(_publicKey);\n}\n/**\n * Unpacks a public key from its packed string representation back to its original point form on the Baby Jubjub curve.\n * This function checks for the validity of the input format before attempting to unpack.\n * @param publicKey The packed public key as a bignumberish.\n * @returns The unpacked public key as a point.\n */\nfunction unpackPublicKey(publicKey) {\n    requireBigNumberish(publicKey, \"publicKey\");\n    const unpackedPublicKey = unpackPoint(bigNumberishToBigInt(publicKey));\n    if (unpackedPublicKey === null) {\n        throw new Error(\"Invalid public key\");\n    }\n    return unpackedPublicKey;\n}\n/**\n * Packs an EdDSA signature into a buffer of 64 bytes for efficient storage.\n * Use {@link unpackSignature} to reverse the process without needing to know\n * the details of the format.\n *\n * The buffer contains the R8 point packed int 32 bytes (via\n * {@link packSignature}) followed by the S scalar.  All encodings are\n * little-endian.\n *\n * @param signature the signature to pack\n * @returns a 64 byte buffer containing the packed signature\n */\nfunction packSignature(signature) {\n    if (!isSignature(signature) || !inCurve(signature.R8) || BigInt(signature.S) >= subOrder) {\n        throw new Error(\"Invalid signature\");\n    }\n    const numericSignature = {\n        R8: signature.R8.map((c) => BigInt(c)),\n        S: BigInt(signature.S)\n    };\n    const packedR8 = packPoint(numericSignature.R8);\n    const packedBytes = Buffer.alloc(64);\n    packedBytes.set(leBigIntToBuffer(packedR8, 32), 0);\n    packedBytes.set(leBigIntToBuffer(numericSignature.S, 32), 32);\n    return packedBytes;\n}\n/**\n * Unpacks a signature produced by {@link packSignature}.  See that function\n * for the details of the format.\n *\n * @param packedSignature the 64 byte buffer to unpack\n * @returns a Signature with numbers in string form\n */\nfunction unpackSignature(packedSignature) {\n    requireBuffer(packedSignature, \"packedSignature\");\n    if (packedSignature.length !== 64) {\n        throw new Error(\"Packed signature must be 64 bytes\");\n    }\n    const sliceR8 = packedSignature.subarray(0, 32);\n    const sliceS = packedSignature.subarray(32, 64);\n    const unpackedR8 = unpackPoint(leBufferToBigInt(sliceR8));\n    if (unpackedR8 === null) {\n        throw new Error(`Invalid packed signature point ${sliceS.toString(\"hex\")}.`);\n    }\n    return {\n        R8: unpackedR8,\n        S: leBufferToBigInt(sliceS)\n    };\n}\n/**\n * Represents a cryptographic entity capable of signing messages and verifying signatures\n * using the EdDSA scheme with Poseidon hash and the Baby Jubjub elliptic curve.\n */\nclass EdDSAPoseidon {\n    /**\n     * Initializes a new instance, deriving necessary cryptographic parameters from the provided private key.\n     * If the private key is not passed as a parameter, a random 32-byte hexadecimal key is generated.\n     *\n     * The private key must be an instance of Buffer, Uint8Array or a string. The input will be used to\n     * generate entropy and there is no limit in size.\n     * The string is used as a set of raw bytes (in UTF-8) and is typically used to pass passwords or secret messages.\n     * If you want to pass a bigint, a number or a hexadecimal, be sure to convert them to one of the supported types first.\n     * The 'conversions' module in @zk-kit/utils provides a set of functions that may be useful in case you need to convert types.\n     *\n     * @param privateKey The private key used for signing and public key derivation.\n     */\n    constructor(privateKey = crypto.getRandomValues(32)) {\n        this.privateKey = privateKey;\n        this.secretScalar = deriveSecretScalar(privateKey);\n        this.publicKey = derivePublicKey(privateKey);\n        this.packedPublicKey = packPublicKey(this.publicKey);\n    }\n    /**\n     * Signs a given message using the private key and returns the signature.\n     * @param message The message to be signed.\n     * @returns The signature of the message.\n     */\n    signMessage(message) {\n        return signMessage(this.privateKey, message);\n    }\n    /**\n     * Verifies a signature against a message and the public key stored in this instance.\n     * @param message The message whose signature is to be verified.\n     * @param signature The signature to be verified.\n     * @returns True if the signature is valid for the message and public key, false otherwise.\n     */\n    verifySignature(message, signature) {\n        return verifySignature(message, signature, this.publicKey);\n    }\n}\n\nexport { EdDSAPoseidon, derivePublicKey, deriveSecretScalar, packPublicKey, packSignature, signMessage, unpackPublicKey, unpackSignature, verifySignature };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5979, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.3.0/node_modules/%40zk-kit/utils/dist/lib.esm/type-checks.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.3.0\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { Buffer } from 'buffer';\n\n/**\n * @module TypeChecks\n * This module provides utility functions to check data types.\n * It defines a set of supported types and includes functions to check if\n * a value is defined and if it matches a supported type. These functions\n * are useful for type checking and validation in the other libraries,\n * enhancing code robustness and reliability.\n */\n/** @internal */\nconst supportedTypes = [\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"function\",\n    \"Array\",\n    \"Uint8Array\",\n    \"Buffer\",\n    \"object\",\n    \"bigint\",\n    \"stringified-bigint\",\n    \"hexadecimal\",\n    \"bignumber\",\n    \"bignumberish\"\n];\n/**\n * Returns true if the value is defined, false otherwise.\n * @param value The value to be checked.\n */\nfunction isDefined(value) {\n    return typeof value !== \"undefined\";\n}\n/**\n * Returns true if the value is a number, false otherwise.\n * @param value The value to be checked.\n */\nfunction isNumber(value) {\n    return typeof value === \"number\";\n}\n/**\n * Returns true if the value is a boolean, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\n/**\n * Returns true if the value is a string, false otherwise.\n * @param value The value to be checked.\n */\nfunction isString(value) {\n    return typeof value === \"string\";\n}\n/**\n * Returns true if the value is a function, false otherwise.\n * @param value The value to be checked.\n */\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n/**\n * Returns true if the value is an object, false otherwise.\n * Please, note that arrays are also objects in JavaScript.\n * @param value The value to be checked.\n */\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n/**\n * Returns true if the value is an Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isArray(value) {\n    return isObject(value) && Array.isArray(value);\n}\n/**\n * Returns true if the value is a Uint8Array instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isUint8Array(value) {\n    return value instanceof Uint8Array;\n}\n/**\n * Returns true if the value is a Buffer instance, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBuffer(value) {\n    return Buffer.isBuffer(value);\n}\n/**\n * Returns true if the value is a bigint, false otherwise.\n * @param value The value to be checked.\n */\nfunction isBigInt(value) {\n    return typeof value === \"bigint\";\n}\n/**\n * Checks if the given value is a string that represents a valid bigint.\n * @param value The value to be checked if it's a stringified bigint.\n */\nfunction isStringifiedBigInt(value) {\n    // Check if value is a string first.\n    if (!isString(value)) {\n        return false;\n    }\n    try {\n        // Attempt to convert the string to BigInt.\n        BigInt(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Checks if a string is a valid hexadecimal string representation.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param value The string to be tested.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction isHexadecimal(value, prefix = true) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (prefix) {\n        return /^(0x|0X)[0-9a-fA-F]+$/.test(value);\n    }\n    return /^[0-9a-fA-F]+$/.test(value);\n}\n/**\n * Checks if the given value can be considered as BigNumber.\n * A value is considered a BigNumber if it is a bigint or a string\n * that can be converted to a bigint (via `Bigint(s)`).\n * @param value The value to check.\n */\nfunction isBigNumber(value) {\n    return isBigInt(value) || isStringifiedBigInt(value);\n}\n/**\n * Checks if the given value can be considered as BigNumberish.\n * A value is considered BigNumberish if it meets\n * any of the following conditions: it's a number, a bigint, a string\n * that can be converted to a bigint, a hexadecimal\n * string, or a Buffer object.\n * @param value The value to check.\n */\nfunction isBigNumberish(value) {\n    return (isNumber(value) ||\n        isBigInt(value) ||\n        isStringifiedBigInt(value) ||\n        isHexadecimal(value) ||\n        isBuffer(value) ||\n        isUint8Array(value));\n}\n/**\n * Returns true if the value type is the same as the type passed\n * as the second parameter, false otherwise.\n * @param value\n * @param type The expected type.\n */\nfunction isType(value, type) {\n    switch (type) {\n        case \"number\":\n            return isNumber(value);\n        case \"boolean\":\n            return isBoolean(value);\n        case \"string\":\n            return isString(value);\n        case \"function\":\n            return isFunction(value);\n        case \"Array\":\n            return isArray(value);\n        case \"Uint8Array\":\n            return isUint8Array(value);\n        case \"Buffer\":\n            return isBuffer(value);\n        case \"object\":\n            return isObject(value);\n        case \"bigint\":\n            return isBigInt(value);\n        case \"stringified-bigint\":\n            return isStringifiedBigInt(value);\n        case \"hexadecimal\":\n            return isHexadecimal(value);\n        case \"bignumber\":\n            return isBigNumber(value);\n        case \"bignumberish\":\n            return isBigNumberish(value);\n        default:\n            return false;\n    }\n}\n/**\n * Returns true if the type is being supported by this utility\n * functions, false otherwise.\n * @param type The type to be checked.\n */\nfunction isSupportedType(type) {\n    return supportedTypes.includes(type);\n}\n\nexport { isArray, isBigInt, isBigNumber, isBigNumberish, isBoolean, isBuffer, isDefined, isFunction, isHexadecimal, isNumber, isObject, isString, isStringifiedBigInt, isSupportedType, isType, isUint8Array, supportedTypes };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;;;;;;CAOC,GACD,cAAc,GACd,MAAM,iBAAiB;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD;;;CAGC,GACD,SAAS,UAAU,KAAK;IACpB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,UAAU,KAAK;IACpB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,WAAW,KAAK;IACrB,OAAO,OAAO,UAAU;AAC5B;AACA;;;;CAIC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,QAAQ,KAAK;IAClB,OAAO,SAAS,UAAU,MAAM,OAAO,CAAC;AAC5C;AACA;;;CAGC,GACD,SAAS,aAAa,KAAK;IACvB,OAAO,iBAAiB;AAC5B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,+LAAM,CAAC,QAAQ,CAAC;AAC3B;AACA;;;CAGC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU;AAC5B;AACA;;;CAGC,GACD,SAAS,oBAAoB,KAAK;IAC9B,oCAAoC;IACpC,IAAI,CAAC,SAAS,QAAQ;QAClB,OAAO;IACX;IACA,IAAI;QACA,2CAA2C;QAC3C,OAAO;QACP,OAAO;IACX,EACA,UAAM;QACF,OAAO;IACX;AACJ;AACA;;;;;;;CAOC,GACD,SAAS,cAAc,KAAK;QAAE,SAAA,iEAAS;IACnC,IAAI,CAAC,SAAS,QAAQ;QAClB,OAAO;IACX;IACA,IAAI,QAAQ;QACR,OAAO,wBAAwB,IAAI,CAAC;IACxC;IACA,OAAO,iBAAiB,IAAI,CAAC;AACjC;AACA;;;;;CAKC,GACD,SAAS,YAAY,KAAK;IACtB,OAAO,SAAS,UAAU,oBAAoB;AAClD;AACA;;;;;;;CAOC,GACD,SAAS,eAAe,KAAK;IACzB,OAAQ,SAAS,UACb,SAAS,UACT,oBAAoB,UACpB,cAAc,UACd,SAAS,UACT,aAAa;AACrB;AACA;;;;;CAKC,GACD,SAAS,OAAO,KAAK,EAAE,IAAI;IACvB,OAAQ;QACJ,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,UAAU;QACrB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,WAAW;QACtB,KAAK;YACD,OAAO,QAAQ;QACnB,KAAK;YACD,OAAO,aAAa;QACxB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,SAAS;QACpB,KAAK;YACD,OAAO,oBAAoB;QAC/B,KAAK;YACD,OAAO,cAAc;QACzB,KAAK;YACD,OAAO,YAAY;QACvB,KAAK;YACD,OAAO,eAAe;QAC1B;YACI,OAAO;IACf;AACJ;AACA;;;;CAIC,GACD,SAAS,gBAAgB,IAAI;IACzB,OAAO,eAAe,QAAQ,CAAC;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6207, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.3.0/node_modules/%40zk-kit/utils/dist/lib.esm/error-handlers.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.3.0\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { isDefined, isNumber, isBoolean, isString, isFunction, isArray, isUint8Array, isBuffer, isObject, isBigInt, isStringifiedBigInt, isHexadecimal, isBigNumber, isBigNumberish, isSupportedType, isType } from './type-checks.js';\n\n/**\n * @module ErrorHandlers\n * This module is designed to provide utility functions for validating\n * function parameters. It includes functions that throw type errors if\n * the parameters do not meet specified criteria, such as being defined,\n * a number, a string, a function, or an array. This module helps ensure\n * that functions receive the correct types of inputs, enhancing code\n * reliability and reducing runtime errors.\n */\n/**\n * @throws Throws a type error if the parameter value has not been defined.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireDefined(parameterValue, parameterName) {\n    if (!isDefined(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not defined`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a number.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireNumber(parameterValue, parameterName) {\n    if (!isNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a number, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a boolean.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBoolean(parameterValue, parameterName) {\n    if (!isBoolean(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a boolean, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a string.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireString(parameterValue, parameterName) {\n    if (!isString(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a string, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a function.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireFunction(parameterValue, parameterName) {\n    if (!isFunction(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a function, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireArray(parameterValue, parameterName) {\n    if (!isArray(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Uint8Array.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireUint8Array(parameterValue, parameterName) {\n    if (!isUint8Array(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Uint8Array instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a Buffer.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBuffer(parameterValue, parameterName) {\n    if (!isBuffer(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a Buffer instance`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not an object.\n * Please, note that arrays are also objects in JavaScript.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireObject(parameterValue, parameterName) {\n    if (!isObject(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not an object, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigInt(parameterValue, parameterName) {\n    if (!isBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bigint, received type: ${typeof parameterValue}`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a stringified bigint.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireStringifiedBigInt(parameterValue, parameterName) {\n    if (!isStringifiedBigInt(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a stringified bigint`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a hexadecimal string.\n * If 'prefix' is 'true', the string must start with '0x' or '0X' followed by one or more\n * hexadecimal digits (0-9, a-f, A-F), otherwise no prefix is expected. 'prefix' is optional and\n * if its value it is not explicitly defined it will be set to 'true' by default.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n * @param prefix A boolean to include or not a '0x' or '0X' prefix.\n */\nfunction requireHexadecimal(parameterValue, parameterName, prefix = true) {\n    if (!isHexadecimal(parameterValue, prefix)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a hexadecimal string`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumber(parameterValue, parameterName) {\n    if (!isBigNumber(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value is not a bignumber-ish.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireBigNumberish(parameterValue, parameterName) {\n    if (!isBigNumberish(parameterValue)) {\n        throw new TypeError(`Parameter '${parameterName}' is not a bignumber-ish`);\n    }\n}\n/**\n * @throws Throws a type error if the parameter value type is not part of the list of types.\n * @param parameterValue The parameter value.\n * @param parameterName The parameter name.\n */\nfunction requireTypes(parameterValue, parameterName, types) {\n    for (const type of types) {\n        if (!isSupportedType(type)) {\n            throw new Error(`Type '${type}' is not supported`);\n        }\n    }\n    for (const type of types) {\n        if (isType(parameterValue, type)) {\n            return;\n        }\n    }\n    throw new TypeError(`Parameter '${parameterName}' is none of the following types: ${types.join(\", \")}`);\n}\n\nexport { requireArray, requireBigInt, requireBigNumber, requireBigNumberish, requireBoolean, requireBuffer, requireDefined, requireFunction, requireHexadecimal, requireNumber, requireObject, requireString, requireStringifiedBigInt, requireTypes, requireUint8Array };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6410, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40zk-kit%2Butils%401.3.0/node_modules/%40zk-kit/utils/dist/lib.esm/conversions.js"],"sourcesContent":["/**\n * @module @zk-kit/utils\n * @version 1.3.0\n * @file Essential zero-knowledge utility library for JavaScript developers.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/utils}\n*/\nimport { Buffer } from 'buffer';\nimport { requireBigInt, requireTypes, requireBigNumberish, requireHexadecimal, requireString } from './error-handlers.js';\nimport { isHexadecimal, isBuffer, isUint8Array } from './type-checks.js';\n\n/**\n * @module Conversions\n * This module provides a collection of utility functions for converting\n * between different numerical formats, particularly focusing on\n * conversions involving bigints, hexadecimals and buffers.\n * The module is structured with clear function naming to indicate\n * the conversion direction (e.g., `bigIntToHexadecimal` for BigInt\n * to hexadecimal, `bufferToBigInt` for buffer to bigint) and employs\n * type checks to ensure the correct handling of various input types.\n * It also includes variations for both big-endian (`be`) and little-endian\n * (`le`) conversions. It is important to note that when there is no prefix,\n * the order of bytes is always big-endian.\n */\n/**\n * Converts a bigint to a hexadecimal string.\n * @param value The bigint value to convert.\n * @returns The hexadecimal representation of the bigint.\n */\nfunction bigIntToHexadecimal(value) {\n    requireBigInt(value, \"value\");\n    let hex = value.toString(16);\n    // Ensure even length.\n    if (hex.length % 2 !== 0) {\n        hex = `0${hex}`;\n    }\n    return hex;\n}\n/**\n * Converts a hexadecimal string to a bigint. The input is interpreted as hexadecimal\n * with or without a '0x' prefix. It uses big-endian byte order.\n * @param value The hexadecimal string to convert.\n * @returns The bigint representation of the hexadecimal string.\n */\nfunction hexadecimalToBigInt(value) {\n    if (!isHexadecimal(value) && !isHexadecimal(value, false)) {\n        throw new TypeError(`Parameter 'value' is not a hexadecimal string`);\n    }\n    // Ensure the hex string starts with '0x'.\n    const formattedHexString = value.startsWith(\"0x\") ? value : `0x${value}`;\n    return BigInt(formattedHexString);\n}\n/**\n * Converts a buffer of bytes to a bigint using big-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction beBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint using little-endian byte order.\n * It accepts 'Buffer' or 'Uint8Array'.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents in little-endian.\n */\nfunction leBufferToBigInt(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return BigInt(`0x${Buffer.from(value).reverse().toString(\"hex\")}`);\n}\n/**\n * Converts a buffer to a bigint. Alias for beBufferToBigInt.\n * @param value The buffer to convert.\n * @returns The bigint representation of the buffer's contents.\n */\nfunction bufferToBigInt(value) {\n    return beBufferToBigInt(value);\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses big-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint.\n */\nfunction beBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\");\n    fromHex.copy(buffer, size - fromHex.length);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer and fills with zeros if a valid\n * size (i.e. number of bytes) is specified. If the size is not defined,\n * it gets the size from the given bigint. If the specified size is smaller than\n * the size of the bigint (i.e. `minSize`), an error is thrown.\n * It uses little-endian byte order.\n * @param value The bigint to convert.\n * @param size The number of bytes of the buffer to return.\n * @returns The buffer representation of the bigint in little-endian.\n */\nfunction leBigIntToBuffer(value, size) {\n    const hex = bigIntToHexadecimal(value);\n    // Calculate the minimum buffer size required to represent 'n' in bytes.\n    // Each hexadecimal character represents 4 bits, so 2 characters are 1 byte.\n    const minSize = Math.ceil(hex.length / 2);\n    if (!size) {\n        size = minSize;\n    }\n    else if (size < minSize) {\n        throw Error(`Size ${size} is too small, need at least ${minSize} bytes`);\n    }\n    // Allocate buffer of the desired size, filled with zeros.\n    const buffer = Buffer.alloc(size, 0);\n    const fromHex = Buffer.from(hex, \"hex\").reverse();\n    fromHex.copy(buffer, 0);\n    return buffer;\n}\n/**\n * Converts a bigint to a buffer. Alias for beBigIntToBuffer.\n * @param value The bigint to convert.\n * @returns The buffer representation of the bigint.\n */\nfunction bigIntToBuffer(value) {\n    return beBigIntToBuffer(value);\n}\n/**\n * Converts a BigNumberish type to a bigint. If the input is already a bigint,\n * the return value will be the bigint itself, otherwise it will be converted\n * to a bigint using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The bigint representation of the BigNumberish value.\n */\nfunction bigNumberishToBigInt(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return bufferToBigInt(value);\n    }\n    return BigInt(value);\n}\n/**\n * Converts a BigNumberish type to a buffer. If the input is already a buffer,\n * the return value will be the buffer itself, otherwise it will be converted\n * to a buffer using big-endian byte order.\n * @param value The BigNumberish value to convert.\n * @returns The buffer representation of the BigNumberish value.\n */\nfunction bigNumberishToBuffer(value) {\n    requireBigNumberish(value, \"value\");\n    if (isBuffer(value) || isUint8Array(value)) {\n        return Buffer.from(value);\n    }\n    return bigIntToBuffer(bigNumberishToBigInt(value));\n}\n/**\n * Converts an hexadecimal string to a buffer. The hexadecimal string\n * should not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The hexadecimal string to convert.\n * @returns The buffer representation of the hexadecimal string.\n */\nfunction hexadecimalToBuffer(value) {\n    requireHexadecimal(value, \"value\", false);\n    // Ensure even length before converting to buffer.\n    if (value.length % 2 !== 0) {\n        value = `0${value}`;\n    }\n    return Buffer.from(value, \"hex\");\n}\n/**\n * Converts a buffer to a hexadecimal string. It accepts 'Buffer' or 'Uint8Array'.\n * The hexadecimal string will not start with '0x' or '0X'. It keeps the bytes in the same order.\n * @param value The buffer to convert.\n * @returns The converted hexadecimal string.\n */\nfunction bufferToHexadecimal(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"hex\");\n}\n/**\n * Converts bytes to a base64 string. It accepts 'Buffer' or 'Uint8Array'.\n * @param value The bytes to convert.\n * @returns The converted base64 string.\n */\nfunction bufferToBase64(value) {\n    requireTypes(value, \"value\", [\"Buffer\", \"Uint8Array\"]);\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Converts a base64 string to bytes (i.e. a buffer). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they will be ignored.\n * @param value The base64 string to convert.\n * @returns The converted buffer.\n */\nfunction base64ToBuffer(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Converts text (utf8) to a base64 string.\n * @param value The text to convert.\n * @returns The converted base64 string.\n */\nfunction textToBase64(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"utf8\").toString(\"base64\");\n}\n/**\n * Converts a base64 string to text (utf8). This function does not check\n * if the input value is a valid base64 string. If there are unsupported characters\n * they could be ignored and the result may be unexpected.\n * @param value The base64 string to convert.\n * @returns The converted text.\n */\nfunction base64ToText(value) {\n    requireString(value, \"value\");\n    return Buffer.from(value, \"base64\").toString(\"utf8\");\n}\n\nexport { base64ToBuffer, base64ToText, beBigIntToBuffer, beBufferToBigInt, bigIntToBuffer, bigIntToHexadecimal, bigNumberishToBigInt, bigNumberishToBuffer, bufferToBase64, bufferToBigInt, bufferToHexadecimal, hexadecimalToBigInt, hexadecimalToBuffer, leBigIntToBuffer, leBufferToBigInt, textToBase64 };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;;AAEA;;;;;;;;;;;;CAYC,GACD;;;;CAIC,GACD,SAAS,oBAAoB,KAAK;IAC9B,IAAA,oQAAa,EAAC,OAAO;IACrB,IAAI,MAAM,MAAM,QAAQ,CAAC;IACzB,sBAAsB;IACtB,IAAI,IAAI,MAAM,GAAG,MAAM,GAAG;QACtB,MAAM,AAAC,IAAO,OAAJ;IACd;IACA,OAAO;AACX;AACA;;;;;CAKC,GACD,SAAS,oBAAoB,KAAK;IAC9B,IAAI,CAAC,IAAA,iQAAa,EAAC,UAAU,CAAC,IAAA,iQAAa,EAAC,OAAO,QAAQ;QACvD,MAAM,IAAI,UAAW;IACzB;IACA,0CAA0C;IAC1C,MAAM,qBAAqB,MAAM,UAAU,CAAC,QAAQ,QAAQ,AAAC,KAAU,OAAN;IACjE,OAAO,OAAO;AAClB;AACA;;;;;CAKC,GACD,SAAS,iBAAiB,KAAK;IAC3B,IAAA,mQAAY,EAAC,OAAO,SAAS;QAAC;QAAU;KAAa;IACrD,OAAO,OAAO,AAAC,KAAuC,OAAnC,+LAAM,CAAC,IAAI,CAAC,OAAO,QAAQ,CAAC;AACnD;AACA;;;;;CAKC,GACD,SAAS,iBAAiB,KAAK;IAC3B,IAAA,mQAAY,EAAC,OAAO,SAAS;QAAC;QAAU;KAAa;IACrD,OAAO,OAAO,AAAC,KAAiD,OAA7C,+LAAM,CAAC,IAAI,CAAC,OAAO,OAAO,GAAG,QAAQ,CAAC;AAC7D;AACA;;;;CAIC,GACD,SAAS,eAAe,KAAK;IACzB,OAAO,iBAAiB;AAC5B;AACA;;;;;;;;;CASC,GACD,SAAS,iBAAiB,KAAK,EAAE,IAAI;IACjC,MAAM,MAAM,oBAAoB;IAChC,wEAAwE;IACxE,4EAA4E;IAC5E,MAAM,UAAU,KAAK,IAAI,CAAC,IAAI,MAAM,GAAG;IACvC,IAAI,CAAC,MAAM;QACP,OAAO;IACX,OACK,IAAI,OAAO,SAAS;QACrB,MAAM,MAAM,AAAC,QAA2C,OAApC,MAAK,iCAAuC,OAAR,SAAQ;IACpE;IACA,0DAA0D;IAC1D,MAAM,SAAS,+LAAM,CAAC,KAAK,CAAC,MAAM;IAClC,MAAM,UAAU,+LAAM,CAAC,IAAI,CAAC,KAAK;IACjC,QAAQ,IAAI,CAAC,QAAQ,OAAO,QAAQ,MAAM;IAC1C,OAAO;AACX;AACA;;;;;;;;;CASC,GACD,SAAS,iBAAiB,KAAK,EAAE,IAAI;IACjC,MAAM,MAAM,oBAAoB;IAChC,wEAAwE;IACxE,4EAA4E;IAC5E,MAAM,UAAU,KAAK,IAAI,CAAC,IAAI,MAAM,GAAG;IACvC,IAAI,CAAC,MAAM;QACP,OAAO;IACX,OACK,IAAI,OAAO,SAAS;QACrB,MAAM,MAAM,AAAC,QAA2C,OAApC,MAAK,iCAAuC,OAAR,SAAQ;IACpE;IACA,0DAA0D;IAC1D,MAAM,SAAS,+LAAM,CAAC,KAAK,CAAC,MAAM;IAClC,MAAM,UAAU,+LAAM,CAAC,IAAI,CAAC,KAAK,OAAO,OAAO;IAC/C,QAAQ,IAAI,CAAC,QAAQ;IACrB,OAAO;AACX;AACA;;;;CAIC,GACD,SAAS,eAAe,KAAK;IACzB,OAAO,iBAAiB;AAC5B;AACA;;;;;;CAMC,GACD,SAAS,qBAAqB,KAAK;IAC/B,IAAA,0QAAmB,EAAC,OAAO;IAC3B,IAAI,IAAA,4PAAQ,EAAC,UAAU,IAAA,gQAAY,EAAC,QAAQ;QACxC,OAAO,eAAe;IAC1B;IACA,OAAO,OAAO;AAClB;AACA;;;;;;CAMC,GACD,SAAS,qBAAqB,KAAK;IAC/B,IAAA,0QAAmB,EAAC,OAAO;IAC3B,IAAI,IAAA,4PAAQ,EAAC,UAAU,IAAA,gQAAY,EAAC,QAAQ;QACxC,OAAO,+LAAM,CAAC,IAAI,CAAC;IACvB;IACA,OAAO,eAAe,qBAAqB;AAC/C;AACA;;;;;CAKC,GACD,SAAS,oBAAoB,KAAK;IAC9B,IAAA,yQAAkB,EAAC,OAAO,SAAS;IACnC,kDAAkD;IAClD,IAAI,MAAM,MAAM,GAAG,MAAM,GAAG;QACxB,QAAQ,AAAC,IAAS,OAAN;IAChB;IACA,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO;AAC9B;AACA;;;;;CAKC,GACD,SAAS,oBAAoB,KAAK;IAC9B,IAAA,mQAAY,EAAC,OAAO,SAAS;QAAC;QAAU;KAAa;IACrD,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO,QAAQ,CAAC;AACvC;AACA;;;;CAIC,GACD,SAAS,eAAe,KAAK;IACzB,IAAA,mQAAY,EAAC,OAAO,SAAS;QAAC;QAAU;KAAa;IACrD,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO,QAAQ,CAAC;AACvC;AACA;;;;;;CAMC,GACD,SAAS,eAAe,KAAK;IACzB,IAAA,oQAAa,EAAC,OAAO;IACrB,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO;AAC9B;AACA;;;;CAIC,GACD,SAAS,aAAa,KAAK;IACvB,IAAA,oQAAa,EAAC,OAAO;IACrB,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO,QAAQ,QAAQ,CAAC;AAC/C;AACA;;;;;;CAMC,GACD,SAAS,aAAa,KAAK;IACvB,IAAA,oQAAa,EAAC,OAAO;IACrB,OAAO,+LAAM,CAAC,IAAI,CAAC,OAAO,UAAU,QAAQ,CAAC;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6678, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/constants/2.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  C: ['DumlkrqalRjQWYbWVvQMIRTEmTwRuymTjSHUcwTNjm4=', 'APFEUjXyFIxZhlhxafwbzYh7CNTQCGjfVpb/9AlW6GQ=', 'CN/zSH6KyZ4fKaBY0PqAuTDHKHMLerNs6HnziQ7Pc/U=', 'Lye+aQ/a7kbDzij3UysTyFbDU0LIS9puIJZjEPrcAdA=', 'KyrhrPaLe40kFr6/PU9iNLdj/gS4BD7ki4MnvryhbPI=', 'AxnQYgcr737MperAb5fU1VlSwXWrawPq5ktEx9vxHPo=', 'KIE9yuuuqoKKN234evSmO8i3vyetScYpjvezh78oUm0=', 'JydnOyzLyQPxgb844cHUDSAzhlIAw1K8FQkord35y3g=', 'I07EXKJ3J8LnSr0rKhSUzW771D40BYfWuPueMeZcxjI=', 'FbUlNAMa4Y9/hiyyz3z3YKsQqBUKM3sczZn/boeX1Cg=', 'Dcj61tnks19e2aPRhrec444Oio0bWLEy1wHU7s9o0fY=', 'G82V/8IR+8pgD3BfrT+1Z+pOs3j2Lh/sl4BVGKR+TZw=', 'EFILCrchyt/p7/gbAW/DTcdto2wleJN4F8uXjQad5Vk=', 'H21IFJuOf32bJX2O1fu69CkySYB1/tCs6IqeuB9WJ/Y=', 'HZZV9lIwkBTSngDvNaIIm//43ByBbw3JyjS9tUYMhwU=', 'BN9aVv+VvK+wUfexzUOpm6cx/2fkcDIFj+PUGFaXzH0=', 'BnLZlfj/9kAVGz0pDO2vFIaQoQqMhCSn9uwoK25L6Cg=', 'CZlStBSIRFSyEgDX/6/dXwyancwG8nCOn8HYIJtcdbk=', 'BSy6IlXf0Ax8SDFDuo1GlEjkNYaptM2Rg/0OhDprn6Y=', 'C4ut7mkK246wvXRxK3mZr4LeVXByUa13Fgd8uTxGTdw=', 'EZsVkPEzB69aHuZRAgwHx0nBXWBoOoBQuWPQqOSyvdE=', 'AxULfNbV0XslKdNr4PZ7gyxKz8iE707lzhW+C/tKjQk=', 'LMYYLF4UVG488ZUfFzkSNVN077g9gImKvmnLMXyepWU=', 'AFAyVR5jeMRQz+EppASzdkIYyt7awU4rktLNcxEb8Pk=', 'IzI34yibqjS7FH6XLry5UWRpw5n8wGn7iPnaLMKCdrU=', 'Bcj09OvUpuPJgNMWdL++YyMDfyGzSuWk6AwtTCTWAoA=', 'CnsdsTBC05a6BdgYoxnyUlK8817zru2R7h8JslkPxls=', 'KnO3H5shDPWxQpZXLJ0y2/FW4rCG/0fcXfVCNlpATsA=', 'GsmwQXq8yaGTUQfp/8kdw+wY8sTb5/Ipdqdgu1xQxGA=', 'EsAzmuCDdII/q7B2cH70eSafPk1ssQQ0kBXuBG3JP8A=', 'C3R1sQKhZa1/WxjbTh5wT1KQCqMlO6rGgkZoLlbpoo4=', 'A3woSeGRyj7bHF5J9ui4kXyEPjeTZvLqMqs6qI1/hEg=', 'BaaBH4VW8BTpJnRmHiF+m9UgbFyToH3BRf2xdqcWNG8=', 'KaeV59mAKJRulHt11U6fBEB26Hp7KIO0e2de9fOL1m4=', 'IEOaDISzIutFo4V6/Bj1gm6Mc4LIoVhcUHvhmZgf0i8=', 'Lguo2U2ez0qU7CBQxzcf8btQ8neZqEttSipvKgmCyIc=', 'FD/RFc4I+yfKOOt8zoIrRReCLNIQkEjS5tDdzKF9ccg=', 'DGTL7LHHNLhXlo273PgTzfhhFlkyPby/yEMjYjvpyvE=', 'AoowWEfGg/ZG/KklwWP/WudPNI1iwrZw8UJs75QD2lM=', 'Lk71EP8Lb9pfqUCrTEOA8mpry2TYlCe4JNZ1W1254ww=', 'AIHJW8QzhOZj15JwyVbOO4kltPbQM7B4uWOE9QV5QA4=', 'LtXwyRy9l0kYfi+t5ofgXuJJGzScA5oLuoqfQCOguzg=', 'MFCZkfiNo1BLvzdO1ari8DRIoix2I0yMmQ8B8zpzUgY=', 'HD8g/VVAmlMiG3xNSaNWufChEZ+yBntBp1KQlEJOxq0=', 'ELTn86td8AMElRRFm24Y7sRrsiE+jhMeFwiHtH3cuWw=', 'KhmCl5w/9/Q93VQ9iRwqvd2A+ATAd9d1A5qjUC5Dre8=', 'HHTuZPFeHbb+3b6tVtbVXbpDHrw5bJr5XK0PExW9XJE=', 'B1M+yFC6f5jquTA8rOAbS55PLouCcIz6nC/kWgrhRqA=', 'IVdrQ45QBEmhUeTurxexVChcaPQtQsGAihGr83ZMB1A=', 'LxfAVZuP55YIrVyhk9YvELzoOEyBXwkGdD1pMINtSp4=', 'LUd+OGLQdwinnoqulGFwvJd1pCATGEdK5mWwsbficw4=', 'Fi9SQ5ZwZMOQ4JVXeYTyka+6ImbDj1q82Jvg9bJ0fqs=', 'K0yyM+3pukgmTs0siuUNGteoWWqH8p+Kd3enAJI5MxE=', 'LI+8st2Fc9wduvj0YihUd22y7s5thcTPQlTnw14DsHo=', 'HW80dyXkgWry/0U/DNVrGZ4bYen2Aemt5eiNuHCUnak=', 'IEsMOX9OvnHrwtiz31uRPfnmrAK2jTEyTNSa9cRWVSk=', 'DEy53DxP2BdPEUmzxjw8L57LgnzX3CVTT/j7dbx5xQI=', 'F0rWGhRIyJmiVBZHT0kwMB5cSUdSeeBjmmFt3EW8e1Q=', 'GpYXe89NjYn3Wd9OwvPN4uqqKMF3zA+hOpgW1Jo40u8=', 'Bm0EskMx1xzQ74BUvGDE/wUgLBJqIzwagkKs42C4owo=', 'KkxPxuwLDPUhlXgoccbdOzgcxl9y4CrVJwN6Yqob2AQ=', 'E6stE2zPN9RH6fLhSnztyV5yf4RG9tnX5Vr8ASGf1kk=', 'ESFVL8omBhYZ0k2EPcgnacGwT87Cb1UZTC4+hprMapo=', 'AO9lMyKxPWyIm8gXFcN9d6bNJn1ZXEqJCaVUbHyXz/E=', 'DiVIPkWmZSCLJh2Lp0BR5kAMd21lJZXZhFrKNdijl9M=', 'KfU23LnddoIkUmRlnhXYjjlaw9Td6S2MRkSNuXnuuok=', 'KlbvnyxT/rrf2jNXXb29iFoSTieAu+oXDkVrqs4Ppb4=', 'HINhx461z13s+3otF7XECfKuKZmkZ2Lo7kFiQKjLmvE=', 'FRr/XziyCg/ARzCJqvAga4Po5op2RQe/09CrS+dDGcU=', 'BMYYfkHtiB3BsjnIj3+dQ6n1L8jIts3R525HYVtR8QA=', 'E7N72A9NJ/sQ2EMx9vttU0uBxh7RV3ZEnoAbfdycKWc=', 'AaXFNic8LZ31eL+9MsF7eizjZkwqUgMskyHOscToqOQ=', 'KrNWGDTKc4Na0F9desuVC0qaLGZrlybagyI5Blt8OwI=', 'HU2OwpHnINsgD+bWhsDWE6yvavTpXTv2n37VFqWXtkY=', 'BBKU0sxITSKPV4T+eRn9K7klNRJAoEtxFRTJyAtlrx0=', 'FUrJjgFwjGEcT6cVmR8ASJj1eTnRJuOSBClx3ZDoH8Y=', 'CzOdisyn1Pg+7dhAk671EFCzaEyI+LCwRSRWO8bqTaQ=', 'CVXknmYQyUJUpPhM+6s0RZjw5x6v9Kfdge2VtQg5yC4=', 'BnRqYVbrpUQmueIiBvFavKmm9B5vU1xvNSVAHqBlRiY=', 'Dxj1oOzRQjxJbzggxUnCeDjleQ4r0KGWrJF8f/Mgd/s=', 'BPbuyhdR9zCKxZ7/W+smHku1Y1g+3nvJKnOCI9b3bhM=', 'K1aXM2TExPXBo+xNo83OA4gR6xFvs+RbwXaNJvwLN1g=', 'Ejdp3UnVsFTc12uJgEsby44TkrOFcWpdg/62XUN/Ke8=', 'IUe0JPxIyAqI7lK5EWmqzqmJ9kRkcRUJlCV7L7AcY+k=', 'D9wfWFSLhXAabFUF6jMqKWR+bzStQkPC6lStiXzr5U0=', 'Ejc6glH+oATfaKvPD3eG1Lzv8oxdu+DDlE9oXMCgsfI=', 'IeT06l81+FutfqUv90LJ6KZCdWtq9EID3YofNcGpADU=', 'FiQ5FtadLKPftHIiJNTEYrVzZkkvRekNioGTTxvDsUc=', 'HvvkbdeleLT2b5rbyItDeKvCFWbhoEU8oTpBWcrASsI=', 'B+pehTfPXdCIhgIOI6fzh9Ro1VJb5m+FO2csyWqIlpo=', 'BajE+ZaLiqO3tHijD5pbY2UPGadefOEcqf4WwLdsALw=', 'IPBXcSzCFlT7/lm9NF6NrD94GMcBuceILZ1Xtyoy6D8=', 'BKEu3tqd/WiWcvjGf+4xY23NjojQHUkBm9kLM+sz22k=', 'J+iNjBXzfc7kTx5UJaUd7L0TbOUJGmdn5J7JVEzNEBo=', 'L+7Re4QoXtm4pcjF6VpB9m4JZhmncDIjF2xB7kM95NE=', 'HtfMdu30XHxAQkFCD3Kc85TllCkRMSoNaXK4vVOv8rg=', 'FXQumbm/oyMVf/jFhvVmDqxng0dhRM3K3yh0vkVGaxo=', 'GqwoU4f2XoLIlfxoh930BXcQdFTG7AMXKE8DPyfQx4U=', 'JYUcPIRdR5D53a29tgVzV4MuLnpJd19x7HWpZVTWfHc=', 'FaWCFWXMLsLOeEV9sZft81O367osVSM3DdzMPZ8Uamc=', 'JBHVekgTuZgO+n4xodtZZtz2TzYEQndQLxVIXyjHFyc=', 'AC5vjWUgzUcT4zW4wLbS5kfpqY4S9M0lWIKLXvbLTJs=', 'L/e8j0OAzemX2gC2FrD80a+PDpHi/h7XOYg0YJ4DFdI=', 'ALmDG5SFJVle4CckRxvNGC6VIfa3u2jx6Tvk/rsNPL4=', 'Ci9TdouOv2qGkTsOV8BOARykCGSKR0OofXetvwycNRI=', 'ACSBVhQv0Dc6R5+R/yOelg9Zn/fpS+abfyopAwXhGY0=', 'Fx1WILh7+xMoz4wCqz8MmjlxlqpqVCwjUOtRKisrzak=', 'FwpPVVNvfclwCHx8ENb612DJUhct1U3ZnRBF5Ow0qAg=', 'KaujP3mf5mwu8xNK6gQzbsw344wc0hG6SC7KF+Lb+uE=', 'HpvBeaT911j90bsZRQiNR+cNEUoD9qDotbplA2nmSXM=', 'HdJpeZtmD61Y9/SJLfsLWv6q2GmpxLRPnJ4cQ72vjwk=', 'Is28i3ARetFAEYHQLhVFnnzNQm/oacfJXR3Syw8krzg=', 'DvBC5FR3HFM6n1elXFA/zv0xUPUu2Up81bqTucfazv0=', 'EWCeBq1sj+Lyh/MDYDfohRMY6LCKA1mgOzBP/KYugoQ=', 'EWbZ5VRhbbqedT7qQnwXt/7NWMB23+QnCLCPW3g6qa8=', 'LeUpiUMahZWTQTAmNUQT2xd/v0zSrAtW+FWoiDV+5GY=', 'MAbrT/x6hYGabaSS86isHfUa7lsXuOiddL8Bz19x6a0=', 'KvQfu2G6ioD9z2//nj9vQimT/o8KRjn5YjRMgiUUUIY=', 'EZ5oTeR2FV/lprQajryF24cYqyeInoXngbIUus5IJ8M=', 'GDW3huLokl4Yi+pZrjY1N7USSMI4KPBHz/eEuXs/2AA=', 'KCAaNMWU36NNeUmWxkM6INFSusKnkFySbEDihasy7rY=', 'CD79eifRdRCU6A/vr3iwAIZMgutXEYdySnYfiMIsxOc=', 'C2+Io1dxmVJhWOYc7qJ76BHBbfd3TdhRngeVZPYf0Ts=', 'Dsho5tFeUdlkT2bh1kcalFiVEcoA0p4QFDkObuQlT1s=', 'KvM+P4ZncScawMmz7S4RQuzT50uTnNQNANk3q4TJhZE=', 'C1ICEfkEtefQm12WHGrOdzRWjFR91oWLNkzl5HlR8Xg=', 'Cy1yLQkZoarY21jxAGKpLqDFasQnDoIsyiKGIBiKHUA=', 'H3kNTX+M8JTZgM6zfCRT6Ve1SpmRyji74AYdHtblYtQ=', 'AXHrld+/fR6uqXzThfeAFQiFwWI1oqao2pLOsB5QQjM=', 'DC0OO1/VdUkym/aIXaZrm3kLQN79LIZQdiMFOBsWiHM=', 'EWL7KGicJxVOWoIotOcrN3y8r6WJ4oPDXTgDBUQHoY0=', 'LxRZtl3uRBtkrThqkegxDygsWpKonhmSFiPvgklxG8A=', 'Hm/zIWtojD2ZbXQ2fVzUwbxInUZ1TrcSwkP3DRtTz7s=', 'AcqL5zgyuNBoFIfSfRV4AtdBpvNs3CoFdogfkyZHiHU=', 'H3c1cG/+n8WG+XbVvfIj3GgChggLEM6gC5td4xX5ZQ4=', 'JSK2D06jMHZAoMLc4EH7qSGsEKPV8JbvR0XKg4KF8Bk=', 'I/C+4AGxAp1SVQdd3JV/gzQYytT1K2w/jOFsI1VyV1s=', 'K8Gui43buB/KrC1EVV7VaF0UJjPp35BfZtlAEJMILVk=', 'D5QGuCllZKNzBFB7jbo+0WI3EnOgex/JgBH81q1yIF8=', 'I2Co6wzH3vpntymY3pBxThfnWxdKUu5KyxJsjNmV8Kg=', 'FYcaXN3q2XaATIA8uu8lXrSBWl6W34sAbcu8J2f4iUg=', 'GTpWdmmY7p4KhlLdLzsdoDYvT1T3I3lUT5V8ze77Qg8=', 'KjlKQ5NPhpgvm+Vv9PqxcDsuY8itM0g05DCYBed3rg8=', 'GFmVTP64aV8+i2NdyzRRkoks0RIjRDuntBZuiHbA0UI=', 'BOEYF2MFDlgBNETby5nxkCsRvCXZC73KQI04GfT+0ys=', 'D9slPe6Dhp1AwzXqZN6MW7EOuC2wi16LH15VUr/QXyM=', 'BYy+ippQJ72qTvtiOt6tYnXwhobxwImEqdfFuum08cA=', 'E4Ltzplx4YZJfq2xrrH1KyO0uDvvAjqw0VIotMzspZo=', 'A0ZJkPBFxu4IGcpR/RGwvn9huOuZ8Ut34eZjRgHZ6LU=', 'I/e/yHINwpb/8ztB+Y/4PG/KtGBdsutaqlvBN663Clg=', 'ClmhWOPuwhF+bpTn8OnezxjD/9XhUxqSGWNhWLuvYvI=', 'BuxUyAOBwFK1i/I7MS/9POLE66BlQgr49MI+0Adf0Hs=', 'EYhy3IMuDrVHa1ZkjoZ+yLCTQPenvLG0li8P+e0fnQE=', 'E9afoSfYNBZa1cfLp61Z7VLgsPDkLX/qleGQa1IJIbE=', 'FpoXf2PqaBJwscaHenPSG94UOUL7cdxV/YpJ8Z8Qx3s=', 'BO9RWRxurZfvQvKHrc5A2Tq+sDK5IvZv+36aWnRQVE0=', 'JW4XWh3AeTkOzXynA/suOxnsYYBdTwPO1fRe5t0Paew=', 'MBAtKGNqvV/l8q9BL/YAT3XMNg0yBd0toAKBPT4s7rI=', 'EJmOQt/NO78cBxS8c+sb9ARDo/qZvvSjH9Mb4YL8x5I=', 'GT7djp/PPXYl+n0ktZih2J8zYur01YLv7K12+HnjaGA=', 'GBaK/TTy2RXQNozoC3szR9HHpWHOYRQl8mZNeqUfC10=', 'KTg8AevTtqsMAXZW6+ZYtqMo7He8M2JuKeLpWzPqYRE=', 'EGRtLyYD3jmh9K5ed3GmSnAttuhvt2q2AL9XP5AQxxE=', 'C+teB9GycUX1dfE5WlW/Ey+QwltA2ns4ZNAkLcsRF/s=', 'FtaFJSB4wTPcDT7K1itciDD5W7LlS1mr3/vwGNlvozY=', 'Cmq9HYM5OPM8dBVOBAS0tApVW7vsId36/Wct1iBH8Bo=', 'GmefXTbre1yOoSpMLe3I/rEt/+7EUDFycKbxmzTPGGA=', 'CYD7IzvUVsI5dNUODr/eRyakI+raTo9v+8dZLj8bk9Y=', 'FhtCIy5huEy/GBCvk6OPwM7OPVYoySggA+ustcMSxys=', 'CtoQqQx/BSCVD31Hpg1eakk/CXh/FWTl0JID20feGgs=', 'GnMNNyMQuoIyA0WimsQjjtPweoorThIbtQ3bmvQH9FE=', 'LIEg8mjvBU+BcGTDad2n6pCDd/6rpcTf+9oQ71joxVY=', 'HHyIJPdYdT+lfAB4nGhCF7kw6VMTvLc+bnuGSaSWj3A=', 'LNntMfX4aRyOOeQHenT6oPQArYtJHrP3tHsn+j/Rz3c=', 'I/9PnUaBNFfPYNkvV2GDmaXgIqwyHKVQhUriORiiLuo=', 'CZRaXRR6T2bO7OZAXd3Z0K9aLFEDUpQH3/HqWPGAQm0=', 'GI2cUoAl1MK2dmDGt3G5D3x9puqinT8mim3SI+xvxjA=', 'MFDjeZZZa3+B9oMRQx2HNNun2SbTYzWV4MDY3fTw9H8=', 'Fa8RaTloMKkWAMqBAsNcQmzq5UYeP5XYnYKVGNMK/Xg=', 'HabQmIVDLqmgbZ83+HPZhdrpM+NRRmspBChNozINisw=', 'J5bqkNJpryn1+KzzOSESTk5PrT2+ZYlF5UbuQR3aqcs=', 'IC190doPa0sDJcizMHdC8B4VYS7I6TBKfLAxngHTLWA=', 'CW1nkNBbt1kVapUromPWcqLX+ceI9Mgxop2s5MD4vl8=', 'BU76H2Ww/OKDgIllJ12He0ONojzlsT4ZY3mMsUR9JaQ=', 'GxYvg9kX6T7bMwjCmALeudiqaQETsuFIZMz24Y5BZfE=', 'IeUkHhJWTdb9nxzdKg3jnu3+/BRmzFaOxc63RaBQbtw=', 'HPtWYujPWskiaoDuF7Nqvstzq1+H4WGSe0NJ4Q5L3wg=', 'DyEXfjAqdxu65tjR7LNztiyZrzRiIKwBKcU/Zm6yQQA=', 'FnFSI3RgaZKv+w3X9xsSvsQjau3mKQVGvO9+H1FcIyA=', 'D6PsW5SIJZwutM8kUBv62b4uyeQsXMjM1BnSppLK2HA=', 'GTwOBOC9KYNXyyZsFQYIDtNu3OhcZIzAhejFexq1S7o=', 'ECrfjvdHNaJ+kSgwbcvDyZ9vcpHNQGV4zhTqKtq6aPg=', 'D+CveFjkmFnipU1vGtlFsTFqokv73SOuQKbQy3DD6rE=', 'IW9nF7vH3tsIU2oiIIQ/Ti2l8dqp69796KXqc0R5jSI=', 'HaVcyQDw0h9KPmlDkZGKGzwjsqx3PGs++I4uQigyUWE='],\n  M: [['EJt/QRug5MmytwyvXDansZS+fBGtJDeL/ttoWSuoEYs=', 'Fu1B4Tu5wMZq4RlCT928vJMU3J/b3upV1sZFQ9xJA+A=', 'K5C7oA/KBYn2F+fcv+guDfcGq2QM6yR7eRqTt042c20='], ['KWnyfu0xpIC5w2x2Q3nbyizI/dFBXD3e1ilAvN4L13E=', 'LiQZ+ewC7DlMmHHIMpY9wbiddDyMe5ZAKbIxFoex/iM=', 'EBBx8AMjebaXMVh2aQ8FPRSNThCfX7BlyKrMVaD4m/o='], ['FDAh7GhqPzMNX55lRjgGXObNeeKMWzdTMmJE7mWhsac=', 'F2zAKWla0CWCpw7/CKb9mdBX4S5Y59e2sWzfq8juKRE=', 'GaP8ClZwK/QXun/uOAJZP6ZERwMHBD93cyec1x0l1eA=']]\n};\nexports.default = _default;"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,OAAO,GAAG,KAAK;AACvB,IAAI,WAAW;IACb,GAAG;QAAC;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;QAAgD;KAA+C;IACnpS,GAAG;QAAC;YAAC;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;SAA+C;QAAE;YAAC;YAAgD;YAAgD;SAA+C;KAAC;AAC3b;AACA,QAAQ,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6903, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/poseidon-lite%400.3.0/node_modules/poseidon-lite/poseidon2.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.poseidon2 = poseidon2;\nvar _poseidon = _interopRequireDefault(require(\"./poseidon\"));\nvar _unstringify = _interopRequireDefault(require(\"./poseidon/unstringify\"));\nvar _ = _interopRequireDefault(require(\"./constants/2\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst c = (0, _unstringify.default)(_.default);\nfunction poseidon2(inputs, nOuts) {\n  return (0, _poseidon.default)(inputs, c, nOuts);\n}"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,SAAS,GAAG;AACpB,IAAI,YAAY;AAChB,IAAI,eAAe;AACnB,IAAI,IAAI;AACR,SAAS,uBAAuB,GAAG;IAAI,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AAAG;AAC9F,MAAM,IAAI,CAAC,GAAG,aAAa,OAAO,EAAE,EAAE,OAAO;AAC7C,SAAS,UAAU,MAAM,EAAE,KAAK;IAC9B,OAAO,CAAC,GAAG,UAAU,OAAO,EAAE,QAAQ,GAAG;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6923, "column": 0}, "map": {"version":3,"sources":["file:///Users/seoheepark/dev/dif/multisig-anon-vc-demo/node_modules/.pnpm/%40semaphore-protocol%2Bidentity%404.13.0-beta.1/node_modules/%40semaphore-protocol/identity/dist/index.js"],"sourcesContent":["/**\n * @module @semaphore-protocol/identity\n * @version 4.13.0-beta.1\n * @file A library to create Semaphore identities.\n * @copyright Ethereum Foundation 2025\n * @license MIT\n * @see [Github]{@link https://github.com/semaphore-protocol/semaphore/tree/main/packages/identity}\n*/\nimport { EdDSAPoseidon, signMessage, verifySignature } from '@zk-kit/eddsa-poseidon';\nimport { textToBase64, bufferToBase64, base64ToBuffer } from '@zk-kit/utils/conversions';\nimport { isString } from '@zk-kit/utils/type-checks';\nimport { poseidon2 } from 'poseidon-lite/poseidon2';\n\n/**\n * The Semaphore identity is essentially an {@link https://www.rfc-editor.org/rfc/rfc8032 | EdDSA}\n * public/private key pair. The {@link https://github.com/privacy-scaling-explorations/zk-kit/tree/main/packages/eddsa-poseidon | EdDSA implementation}\n * in this library uses {@link https://eips.ethereum.org/EIPS/eip-2494 | Baby Jubjub} for public key generation\n * and {@link https://www.poseidon-hash.info | Poseidon} for signatures.\n * In addition, the commitment, i.e. the hash of the public key, is used to represent\n * Semaphore identities in groups, adding an additional layer of privacy and security.\n * The private key of the identity can be exported as a base64 string.\n */\nclass Identity {\n    /**\n     * Initializes the class attributes based on a given private key, which must be text or a buffer.\n     * If the private key is not passed as a parameter, a random private key will be generated.\n     * The EdDSAPoseidon class is used to generate the secret scalar and the public key.\n     * Additionally, the constructor computes a commitment of the public key using a hash function (Poseidon).\n     *\n     * @example\n     * // Generates an identity.\n     * const { privateKey, publicKey, commitment } = new Identity(\"private-key\")\n     * @example\n     * // Generates an identity with a random private key.\n     * const { privateKey, publicKey, commitment } = new Identity()\n     *\n     * @param privateKey The private key used to derive the public key (hexadecimal or string).\n     */\n    constructor(privateKey) {\n        const eddsa = new EdDSAPoseidon(privateKey);\n        this._privateKey = eddsa.privateKey;\n        this._secretScalar = eddsa.secretScalar;\n        this._publicKey = eddsa.publicKey;\n        this._commitment = poseidon2(this._publicKey);\n    }\n    /**\n     * Returns the private key.\n     * @returns The private key as a buffer or text.\n     */\n    get privateKey() {\n        return this._privateKey;\n    }\n    /**\n     * Returns the secret scalar.\n     * @returns The secret scalar as a string.\n     */\n    get secretScalar() {\n        return this._secretScalar;\n    }\n    /**\n     * Returns the public key as a Baby Jubjub {@link https://zkkit.pse.dev/types/_zk_kit_baby_jubjub.Point.html | Point}.\n     * @returns The public key as a point.\n     */\n    get publicKey() {\n        return this._publicKey;\n    }\n    /**\n     * Returns the commitment hash of the public key.\n     * @returns The commitment as a string.\n     */\n    get commitment() {\n        return this._commitment;\n    }\n    /**\n     * Returns the private key encoded as a base64 string.\n     * @returns The private key as a base64 string.\n     */\n    export() {\n        if (isString(this._privateKey)) {\n            return textToBase64(this._privateKey);\n        }\n        return bufferToBase64(this.privateKey);\n    }\n    /**\n     * Returns a Semaphore identity based on a private key encoded as a base64 string.\n     * The private key will be converted to a buffer, regardless of its original type.\n     * @param privateKey The private key as a base64 string.\n     * @returns The Semaphore identity.\n     */\n    static import(privateKey) {\n        return new Identity(base64ToBuffer(privateKey));\n    }\n    /**\n     * Generates a signature for a given message using the private key.\n     * This method demonstrates how to sign a message and could be used\n     * for authentication or data integrity.\n     *\n     * @example\n     * const identity = new Identity()\n     * const signature = identity.signMessage(\"message\")\n     *\n     * @param message The message to be signed.\n     * @returns A {@link https://zkkit.pse.dev/types/_zk_kit_eddsa_poseidon.Signature.html | Signature} object containing the signature components.\n     */\n    signMessage(message) {\n        return signMessage(this.privateKey, message);\n    }\n    /**\n     * Verifies a signature against a given message and public key.\n     * This static method allows for the verification of signatures without needing\n     * an instance of the Identity class. It's useful for cases where you only have\n     * the public key, the message and a signature, and need to verify if they match.\n     *\n     * @example\n     * const identity = new Identity()\n     * const signature = identity.signMessage(\"message\")\n     * Identity.verifySignature(\"message\", signature, identity.publicKey)\n     *\n     * @param message The message that was signed.\n     * @param signature The signature to verify.\n     * @param publicKey The public key to use for verification.\n     * @returns A boolean indicating whether the signature is valid.\n     */\n    static verifySignature(message, signature, publicKey) {\n        return verifySignature(message, signature, publicKey);\n    }\n    /**\n     * Generates the commitment from the given public key.\n     * This static method is particularly useful after signature verification,\n     * as it allows retrieval of the corresponding commitment associated with the public key.\n     *\n     * @example\n     * const identity = new Identity()\n     * Identity.generateCommitment(identity.publicKey)\n     *\n     * @param publicKey The public key to generate the commitment.\n     * @returns The Semaphore identity commitment.\n     */\n    static generateCommitment(publicKey) {\n        return poseidon2(publicKey);\n    }\n}\n\nexport { Identity };\n"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;;AACA;AACA;AACA;AACA;;;;;AAEA;;;;;;;;CAQC,GACD,MAAM;IAuBF;;;KAGC,GACD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,WAAW;IAC3B;IACA;;;KAGC,GACD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,aAAa;IAC7B;IACA;;;KAGC,GACD,IAAI,YAAY;QACZ,OAAO,IAAI,CAAC,UAAU;IAC1B;IACA;;;KAGC,GACD,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,WAAW;IAC3B;IACA;;;KAGC,GACD,SAAS;QACL,IAAI,IAAA,4PAAQ,EAAC,IAAI,CAAC,WAAW,GAAG;YAC5B,OAAO,IAAA,6PAAY,EAAC,IAAI,CAAC,WAAW;QACxC;QACA,OAAO,IAAA,+PAAc,EAAC,IAAI,CAAC,UAAU;IACzC;IACA;;;;;KAKC,GACD,OAAO,OAAO,UAAU,EAAE;QACtB,OAAO,IAAI,SAAS,IAAA,+PAAc,EAAC;IACvC;IACA;;;;;;;;;;;KAWC,GACD,YAAY,OAAO,EAAE;QACjB,OAAO,IAAA,gQAAW,EAAC,IAAI,CAAC,UAAU,EAAE;IACxC;IACA;;;;;;;;;;;;;;;KAeC,GACD,OAAO,gBAAgB,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE;QAClD,OAAO,IAAA,oQAAe,EAAC,SAAS,WAAW;IAC/C;IACA;;;;;;;;;;;KAWC,GACD,OAAO,mBAAmB,SAAS,EAAE;QACjC,OAAO,IAAA,0NAAS,EAAC;IACrB;IArHA;;;;;;;;;;;;;;KAcC,GACD,YAAY,UAAU,CAAE;QACpB,MAAM,QAAQ,IAAI,kQAAa,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,MAAM,UAAU;QACnC,IAAI,CAAC,aAAa,GAAG,MAAM,YAAY;QACvC,IAAI,CAAC,UAAU,GAAG,MAAM,SAAS;QACjC,IAAI,CAAC,WAAW,GAAG,IAAA,0NAAS,EAAC,IAAI,CAAC,UAAU;IAChD;AAiGJ","ignoreList":[0],"debugId":null}}]
}